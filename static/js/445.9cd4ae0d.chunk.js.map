{"version":3,"file":"static/js/445.9cd4ae0d.chunk.js","mappings":"8RASA,MAAMA,EAAiBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6KAY3BC,EAAeJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4IASzBG,EAAcN,EAAAA,GAAOO,OAAMC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,ypBAqC3BM,EAAcT,EAAAA,GAAOU,IAAGC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qFAsBxBS,GAfcZ,EAAAA,GAAOU,IAAGG,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2MAedH,EAAAA,GAAOC,IAAGa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,uEAiH1B,QA3GA,WACE,MAAOY,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAKC,IAAUF,EAAAA,EAAAA,UAAS,KACxBG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAAQC,IAAaN,EAAAA,EAAAA,WAAS,IAC9BO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,OAC5BS,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,MACnCW,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KAAO,IAADC,EACdV,GAAa,GACY,QAAzBU,EAAAC,OAAOC,0BAAkB,IAAAF,GAAzBA,EAA2BG,YAAYC,KAAKC,WAAU,IAEtDC,SAASC,iBAAiB,WAAYC,IACpC,IACE,MAAMC,EAAYL,KAAKM,MAAMF,EAAEG,MAC3BF,EAAUG,YACZ3B,EAAUwB,EAAUG,UAAUC,IAC9BzB,EAAOqB,EAAUG,UAAUzB,MAE7BK,GAAU,GACVE,EAASe,EAAUhB,OACnBG,EAAYa,EAAUd,SACxB,CAAE,MAAOmB,GACPC,QAAQC,IAAIF,EACd,KAGFb,OAAOM,iBAAiB,WAAYC,IAClC,IACE,MAAMC,EAAYL,KAAKM,MAAMF,EAAEG,MAC3BF,EAAUG,YACZ3B,EAAUwB,EAAUG,UAAUC,IAC9BzB,EAAOqB,EAAUG,UAAUzB,MAE7BK,GAAU,GACVE,EAASe,EAAUhB,OACnBG,EAAYa,EAAUd,SACxB,CAAE,MAAOmB,GACPC,QAAQC,IAAIF,EACd,IACA,GACD,KACHf,EAAAA,EAAAA,YAAU,KAyBJR,GAxBgB0B,iBACZC,EAAAA,EAAAA,GAAM,CACVC,OAAQ,OACRC,IAAI,GAADC,OAAKC,qCAA6B,iBACrCC,QAAS,CACPC,cAAerC,KAGhBsC,MAAMC,IACoB,IAArBA,EAAIf,KAAKgB,SACX9B,EAAS,UAAW,CAClB+B,MAAO,CACLzC,IAAKA,EACLH,OAAQA,EACRS,MAAOA,EACPE,SAAUA,IAGhB,IAEDkC,OAAOf,IACNC,QAAQC,IAAIF,EAAI,GAChB,EAGJgB,EACF,GACC,CAACvC,IAEJ,MAKMwC,EAAoBA,KAExBzC,GAAa,GACbO,EAAS,YAAa,CACpB+B,MAAO,CACLzC,IAAKA,EACLH,OAAQA,EACRS,MAAOA,EACPE,SAAUA,IAEZ,EAGJ,OACEqC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG7C,IACC2C,EAAAA,EAAAA,KAAChE,EAAc,CAAAkE,UACbC,EAAAA,EAAAA,MAAC9D,EAAY,CAAA6D,SAAA,EACXF,EAAAA,EAAAA,KAACtD,EAAW,CAAC0D,IAAKC,EAAqBC,IAAI,cAAcC,QAASR,KAElEC,EAAAA,EAAAA,KAACzD,EAAW,CAACgE,QAASR,EAAkBG,SAAC,8BACzCF,EAAAA,EAAAA,KAACnD,EAAO,CAAAqD,SAAC,uDAMrB,C","sources":["routes/Popup.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport second_popup_screen from \"../assets/image/popup_2.png\";\nimport Clear from \"../assets/image/Clear.png\";\nimport { useNavigate } from \"react-router-dom\";\n// import { View, Button } from 'react-native';\n// import { WebView } from 'react-native-webview';\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n`;\n\nconst ModalContent = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StartButton = styled.button`\n  position: absolute;\n  width: 100%;\n  max-width: 350px;\n  height: 58px;\n  bottom: 20%;\n  background: #ffffff;\n  box-shadow: 0px 0px 10px rgba(0, 28, 145, 0.2);\n  border-radius: 8px;\n  cursor: pointer;\n  text-align: center;\n  font-weight: bold;\n  letter-spacing: 0.5em;\n  font-size: 18px;\n  color: #00b0d3;\n\n  @media (max-width: 720px) {\n    font-size: 1em;\n    width: 80%;\n    max-width: 350px;\n    height: 58px;\n    bottom: 20%;\n  }\n\n  @media (max-height: 600px) {\n    font-size: 1em;\n    height: 58px;\n    bottom: 20%;\n  }\n\n  @media (max-aspect-ratio: 4/3) {\n    font-size: 1em;\n    height: 58px;\n    bottom: 20%;\n  }\n`;\n\nconst PopupImage2 = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  cursor: pointer;\n`;\n\nconst CloseButton = styled.img`\n  position: absolute;\n  top: 3%;\n  right: 3%;\n  width: 5%;\n  max-width: 26px;\n  height: auto;\n  cursor: pointer;\n  z-index: 2;\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst TextBox = styled.div`\n  position: absolute;\n  bottom: 10%;\n  font-size: 0.6em;\n`;\n\nfunction Popup() {\n  const [userId, setUserId] = useState(\"\");\n  const [jwt, setJwt] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [rnSend, setRnSend] = useState(false);\n  const [isApp, setIsApp] = useState(null);\n  const [platform, setPlatform] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setShowModal(true);\n    window.ReactNativeWebView?.postMessage(JSON.stringify(true));\n    //android\n    document.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData.loginData.jwt);\n        }\n        setRnSend(true);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    //ios\n    window.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData.loginData.jwt);\n        }\n        setRnSend(true);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    const surbayCheck = async () => {\n      await axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_API_URL}/surbey/check`,\n        headers: {\n          Authorization: jwt,\n        },\n      })\n        .then((res) => {\n          if (res.data.message === 0) {\n            navigate(\"/result\", {\n              state: {\n                jwt: jwt,\n                userId: userId,\n                isApp: isApp,\n                platform: platform,\n              },\n            });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    if (rnSend) {\n      surbayCheck();\n    }\n  }, [rnSend]);\n\n  const handleCloseModal = () => {\n    setShowModal(false); // Close the modal\n    navigate(\"/\");\n  };\n\n  const handleStartSurvey = () => {\n    // Logic for navigating to the survey start page\n    setShowModal(false);\n    navigate(\"/question\", {\n      state: {\n        jwt: jwt,\n        userId: userId,\n        isApp: isApp,\n        platform: platform,\n      },\n    });\n  };\n\n  return (\n    <>\n      {showModal && (\n        <ModalContainer>\n          <ModalContent>\n            <PopupImage2 src={second_popup_screen} alt=\"Modal Image\" onClick={handleStartSurvey} />\n            {/* <CloseButton onClick={handleCloseModal} src={Clear} /> */}\n            <StartButton onClick={handleStartSurvey}>시작하기</StartButton>\n            <TextBox>여행지 제공 : TourAPI4.0</TextBox>\n          </ModalContent>\n        </ModalContainer>\n      )}\n    </>\n  );\n}\n\nexport default Popup;\n"],"names":["ModalContainer","styled","div","_templateObject","_taggedTemplateLiteral","ModalContent","_templateObject2","StartButton","button","_templateObject3","PopupImage2","img","_templateObject4","TextBox","_templateObject5","_templateObject6","userId","setUserId","useState","jwt","setJwt","showModal","setShowModal","rnSend","setRnSend","isApp","setIsApp","platform","setPlatform","navigate","useNavigate","useEffect","_window$ReactNativeWe","window","ReactNativeWebView","postMessage","JSON","stringify","document","addEventListener","e","parseData","parse","data","loginData","id","err","console","log","async","axios","method","url","concat","process","headers","Authorization","then","res","message","state","catch","surbayCheck","handleStartSurvey","_jsx","_Fragment","children","_jsxs","src","second_popup_screen","alt","onClick"],"sourceRoot":""}