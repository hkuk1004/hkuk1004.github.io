{"version":3,"file":"static/js/649.a21283c2.chunk.js","mappings":"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","sources":["components/Button.jsx","routes/WorldCupSelect.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport styled from \"styled-components\";\n\nconst FullButton = styled.button`\n  background: ${(props) => (props.type === \"basic\" ? \"#6A8BFF\" : \"#ffffff\")};\n  color: ${(props) => (props.type === \"basic\" ? \"#ffffff\" : \"#000000\")};\n  border: ${(props) => (props.type === \"basic\" ? \"none\" : \"1px solid #000000\")};\n  border-radius: 8px;\n  display: block;\n  width: 100%;\n  height: ${(props) => props.height};\n  box-shadow: 0px 0px 10px rgba(0, 28, 145, 0.2);\n  font-weight: 500;\n  font-size: 1em;\n  line-height: 1.25em;\n  letter-spacing: -0.07em;\n  text-align: center;\n\n  /* &:hover {\n    box-shadow: 0 80px 0 0 rgba(0, 0, 0, 0.25) inset,\n      0 -80px 0 0 rgba(0, 0, 0, 0.25) inset;\n  } */\n\n  &:active {\n    background: ${(props) => (props.type === \"basic\" ? \"#021248\" : \"#ffffff\")};\n\n  }\n`;\n// height : em, forn-size : 반응형\nconst Button = ({ children, type, height, ...rest }) => {\n\n  return (\n    <FullButton type={type} height={height}{...rest}>\n      {children}\n    </FullButton>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, useLocation, useNavigation } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport styled, { keyframes } from \"styled-components\";\nimport axios from \"axios\";\nimport testImage1 from \"../assets/image/test_image1.png\";\nimport testImage2 from \"../assets/image/test_image2.png\";\nimport versusImage from \"../assets/image/versus_image.png\"\nimport { motion } from \"framer-motion\";\n\nconst WorldCupSelect = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [jwt, setJwt] = useState(\"\");\n  // const navigation = useNavigation();\n  const [showModal, setShowModal] = useState(false);\n  const [theme, setTheme] = useState(\"\");\n  const [rnSend, setRnSend] = useState(false); \n  const [isApp, setIsApp] = useState(null);\n  const [platform, setPlatform] = useState(null);\n  const navigate = useNavigate();\n  const [gameRound, setGameRound] = useState(\"\");\n  const [matchNames, setMatchNames] = useState([]);\n  const [curMatch, setCurMatch] = useState(1);\n  const [count, setCount] = useState(0);\n  const [worldcupList, setWorldcupList] = useState([]);\n  const [titleList, setTitleList] = useState([]);\n  const [imageList, setImageList] = useState([]);\n  const [selectedList, setSelectedList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { state } = useLocation();\n  const [group, setGroup] = useState({});\n  const [groupList, setGroupList] = useState([]);\n  const [groupIdx, setGroupIdx] = useState(0);\n  const [groupCount, setGroupCount] = useState(1);\n\n  // alert(theme);\n  // alert(gameRound);\n  // 월드컵 조사 참여 여부 (수정해야됨)\n  \n\n  useEffect(() => {\n    setShowModal(true);\n    window.ReactNativeWebView?.postMessage(JSON.stringify(true));\n    //android\n    document.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData.loginData.jwt);\n        }\n        setRnSend(true);\n        setTheme(parseData.theme);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    //ios\n    window.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData?.loginData.jwt);\n        }\n        setRnSend(true);\n        setTheme(parseData.theme);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }, []);\n\n\n  useEffect(() => {\n    const getWorldCup = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}/worldcup`,\n        headers: {\n          'Access-Control-Allow-Credentials': true,\n          'ngrok-skip-browser-warning': true,\n          Authorization: jwt,\n        },\n      })\n        .then((res) => {\n          if (res.data.isPass === false || res.data.isEnd === true) {\n            navigate(\"/worldcupselectresult\", {\n              state: {\n                jwt: jwt,\n                theme: theme,\n                userId: userId,\n                isApp: isApp,\n                platform: platform,\n              },\n            });\n          }\n          // alert(JSON.stringify(res.data));\n          // alert(JSON.stringify(Object.keys(res.data.groups)));\n          // alert(JSON.stringify((res.data.groups)));\n          setGroup(res.data.worldcupList);\n          setGroupList(Object.keys(res.data.worldcupList));\n          setGameRound(res.data.round);\n          setMatchNames(res.data.matchNames);\n          // setWorldcupList(res.data.groups);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    if (rnSend) {\n      getWorldCup();\n    }\n  },[rnSend]);\n  \n  const questionClickEvent = (idx) => {\n    if (gameRound === '16') {\n      setCurMatch(curMatch + 1);\n      setGroupCount(groupCount + 1);\n      setCount(count+2);\n      setGroupIdx(groupIdx);\n      if(count === 2) {\n        setGroupIdx(groupIdx + 1);\n        setCount(0);\n        setGroupCount(1);\n        } \n      }\n    else if(gameRound === '8') {\n        setCurMatch(curMatch + 1);\n        setCount(count+1);\n        if(count === 0) {\n          setGroupIdx(groupIdx + 1);\n          setCount(0);\n          } \n    }\n    else if(gameRound === '4') { // 수정해야됨\n      setCurMatch(curMatch + 1);\n      setCount(count+1);\n      if(count === 0) {\n        setGroupIdx(groupIdx + 1);\n        setCount(0);\n        } \n    }\n    let selectedItem = group[groupList[groupIdx]][idx];\n    setSelectedList([...selectedList, selectedItem]);\n\n  }\n\n  const moveResultCheck = async (idx) => {\n    let selectedItem = [];\n    if (idx === 0) {\n      let selectedItem = group[groupList[groupIdx]][0];\n      setSelectedList([...selectedList, selectedItem]);\n      await axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_API_URL}/worldcup/saveResult`,\n        headers: {\n          Authorization: jwt,\n        },\n        data: {\n          results: [...selectedList, selectedItem],\n          round: gameRound,\n        },\n      })\n        .then((res) => {\n          // alert('1');\n          navigate(`/worldcupselectresult`, {\n            state: {\n              jwt: jwt,\n              isApp: isApp,\n              platform: platform,\n              theme: theme,\n              gameRound: gameRound,\n              selectedArr: selectedList,\n            },\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(err);\n        });\n    } else {\n      let selectedItem = group[groupList[groupIdx+1]][0];\n      setSelectedList([...selectedList, selectedItem]);\n      await axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_API_URL}/worldcup/saveResult`,\n        headers: {\n          Authorization: jwt,\n        },\n        data: {\n          results: [...selectedList, selectedItem],\n          round: gameRound,\n        },\n      })\n        .then((res) => {\n          // alert('1');\n          navigate(`/worldcupselectresult`, {\n            state: {\n              jwt: jwt,\n              isApp: isApp,\n              platform: platform,\n              theme: theme,\n              gameRound: gameRound,\n              selectedArr: selectedList,\n            },\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(err);\n        });\n    }\n    \n  }\n\n\n\n  const moveResult = async (idx) => {\n    let selectedItem = group[groupList[groupIdx]][idx]\n    // alert(theme);\n    await axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}/worldcup/saveResult`,\n      headers: {\n        Authorization: jwt,\n      },\n      data: {\n        results: [...selectedList, selectedItem],\n        round: gameRound,\n      },\n    })\n      .then((res) => {\n        // alert('1');\n        navigate(`/worldcupselectresult`, {\n          state: {\n            jwt: jwt,\n            isApp: isApp,\n            platform: platform,\n            theme: theme,\n            gameRound: gameRound,\n            selectedArr: selectedList,\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(err);\n      });\n  };\n\n  // const royalCheck = () => {\n  //   if(gameRound === 2) {\n  //     return(\n  //       <motion.div whileTap={{ rotate: -180 }} >\n  //         <SelectBotContainer style={{borderStyle: 'solid',borderColor: 'black', borderWidth: 2}}>\n  //           <SelectImage \n  //             onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count) : moveResult(count))}\n  //             src={group[groupList[groupIdx + 1]][count]?.image}\n  //           />\n  //           <SelectBtn onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count) : moveResult(count))}>\n  //             {group[groupList[groupIdx + 1]][count]?.title}\n  //           </SelectBtn>\n  //         </SelectBotContainer>\n  //       </motion.div>\n  //     )\n  //   }else {\n  //     return (\n  //       <motion.div whileTap={{ rotate: -180 }} >\n  //         <SelectBotContainer style={{borderStyle: 'solid',borderColor: 'black', borderWidth: 2}}>\n  //           <SelectImage \n  //             onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count+1) : moveResult(count+1))}\n  //             src={group[groupList[groupIdx]][count+1]?.image}\n  //           />\n  //           <SelectBtn onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count+1) : moveResult(count+1))}>\n  //             {group[groupList[groupIdx]][count+1]?.title}\n  //           </SelectBtn>\n  //         </SelectBotContainer>\n  //       </motion.div>\n  //     )\n  //   }\n  // }\n\n  return (\n    <>\n      {isLoading ? (\n        <SpinnerContainer>\n          <Spinner />\n        </SpinnerContainer>\n      ) : (\n        <>\n    <Container>\n      <TextContainer>\n        <TextTopContainer>\n          <WhiteText>선호하는 취향을 선택해주세요</WhiteText>\n        </TextTopContainer>\n        <TextBotContainer>\n          {/* <WhiteText>[{groupList[groupIdx]}조] 게임{groupCount}</WhiteText> */}\n          <WhiteText>{matchNames[curMatch-1]}</WhiteText>\n        </TextBotContainer>\n      </TextContainer>\n      {gameRound === '2' ? (\n        <SelectContainer>\n          <motion.div whileTap={{ rotate: 180}} >\n              <SelectTopContainer style={{borderStyle: 'solid',borderColor: 'black', borderWidth: 2}}>\n                <SelectImage \n                  onClick={() => moveResultCheck(0)} src={group[groupList[groupIdx]][count]?.image}  />\n                <SelectBtn onClick={() =>  moveResultCheck(0)}>\n                  {group[groupList[groupIdx]][count]?.title}\n                </SelectBtn>\n              </SelectTopContainer>\n              </motion.div>\n              <VersusImgage src={versusImage}/>\n            <motion.div whileTap={{ rotate: -180 }} >\n            <SelectBotContainer style={{borderStyle: 'solid',borderColor: 'black', borderWidth: 2}}>\n              <SelectImage \n                onClick={() => moveResultCheck(1)}\n                src={group[groupList[groupIdx+1]][count]?.image}\n              />\n              <SelectBtn onClick={() => moveResultCheck(1)}>\n                {group[groupList[groupIdx+1]][count]?.title}\n              </SelectBtn>\n            </SelectBotContainer>\n          </motion.div>\n            </SelectContainer> \n          ) : (\n            <SelectContainer>\n        <motion.div whileTap={{ rotate: 180}} >\n            <SelectTopContainer style={{borderStyle: 'solid',borderColor: 'black', borderWidth: 2}}>\n              <SelectImage \n                onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count) : moveResult(count))} src={group[groupList[groupIdx]][count]?.image}  />\n              <SelectBtn onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count) : moveResult(count))}>\n                {group[groupList[groupIdx]][count]?.title}\n              </SelectBtn>\n            </SelectTopContainer>\n            </motion.div>\n            <VersusImgage src={versusImage}/>\n          <motion.div whileTap={{ rotate: -180 }} >\n          <SelectBotContainer style={{borderStyle: 'solid',borderColor: 'black', borderWidth: 2}}>\n            <SelectImage \n              onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count+1) : moveResult(count+1))}\n              src={group[groupList[groupIdx]][count+1]?.image}\n            />\n            <SelectBtn onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count+1) : moveResult(count+1))}>\n              {group[groupList[groupIdx]][count+1]?.title}\n            </SelectBtn>\n          </SelectBotContainer>\n        </motion.div>\n          </SelectContainer> \n          ) \n        }\n    </Container>\n    </>\n        )}\n        </>\n  )\n\n    {/* <motion.div whileTap={{ rotate: -180 }} >\n            <SelectBotContainer style={{borderStyle: 'solid',borderColor: 'black', borderWidth: 2}}>\n              <SelectImage \n                onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count+1) : moveResult(count+1))} src={group[groupList[groupIdx+1]][count]?.image}/>\n                <SelectBtn onClick={() => (curMatch < (gameRound/2) ? questionClickEvent(count+1) : moveResult(count))}>\n                  {group[groupList[groupIdx+1]][count]?.title}\n                </SelectBtn>\n            </SelectBotContainer>\n            </motion.div> */}\n};\n\nexport default WorldCupSelect;\n\nconst Container = styled.div`\n  vertical-align: middle;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n`;\nconst TextContainer = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 12.5vh;\n`;\nconst TextTopContainer = styled.div`\n  display: flex;\n`;\nconst TextBotContainer = styled.div`\n  display: flex;\n`;\nconst WhiteText = styled.p`\n  color: #ffffff;\n  font-size: 20px;\n  display: flex;\n  line-height: 30px;\n  font-weight: 500;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  height: 87.5vh;\n  width: 100%;\n  flex-direction: column;\n  background-color: black;\n  position: relative;\n`;\nconst SelectTopContainer = styled.div`\n  height: 43.75vh;\n  display: flex;\n  width: 100%;\n  background-color: black;\n  position: relative;\n`;\nconst SelectBotContainer = styled.div`\n  height: 43.75vh;\n  display: flex;\n  width: 100%;\n  position: relative;\n  background-color: black;\n`;\nconst VersusText = styled.span`\n  display: flex;\n  font-size: 72px;\n  position: absolute;\n  font-weight: 500;\n  /* line-height: 101.36px; */\n  color: #ffffff;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%); //💛 정중앙 배치\n`;\nconst VersusImgage = styled.img`\n  display: flex;\n  position: absolute;\n  width: 190px;\n  height: 190px;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%); //💛 정중앙 배치\n  pointer-events: none;\n`;\nconst SelectBtn = styled.button`\n  display: flex;\n  background-color: #000000;\n  border-radius: 8px;\n  /* width: 124px; */\n  height: 30px;\n  color: #F5F5F5;\n  font-weight: 500;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%);\n  font-size: 18px;\n  /* text-align: center; */\n  align-items: center;\n  justify-content: center;\n  padding-left: 16px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-right: 16px;\n  /* line-height: 24px; */\n`;\nconst SelectImage = styled.img`\n  width: 100%;\n  height: 100%;\n`;\nconst SpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  background-color: black;\n  height: 100vh;\n`;\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst Spinner = styled.div`\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: ${spin} 1s linear infinite;\n`;\n"],"names":["FullButton","styled","button","_templateObject","_taggedTemplateLiteral","props","type","height","_ref","children","rest","_jsx","WorldCupSelect","_group$groupList$grou","_group$groupList$grou2","_group$groupList$coun","_group$groupList$coun2","_group$groupList$grou3","_group$groupList$grou4","_group$groupList$grou5","_group$groupList$grou6","userId","setUserId","useState","jwt","setJwt","showModal","setShowModal","theme","setTheme","rnSend","setRnSend","isApp","setIsApp","platform","setPlatform","navigate","useNavigate","gameRound","setGameRound","matchNames","setMatchNames","curMatch","setCurMatch","count","setCount","worldcupList","setWorldcupList","titleList","setTitleList","imageList","setImageList","selectedList","setSelectedList","isLoading","setIsLoading","state","useLocation","group","setGroup","groupList","setGroupList","groupIdx","setGroupIdx","groupCount","setGroupCount","useEffect","_window$ReactNativeWe","window","ReactNativeWebView","postMessage","JSON","stringify","document","addEventListener","e","parseData","parse","data","loginData","id","err","console","log","async","axios","method","url","concat","process","headers","Authorization","then","res","isPass","isEnd","Object","keys","round","catch","getWorldCup","questionClickEvent","idx","selectedItem","moveResultCheck","results","selectedArr","alert","moveResult","_Fragment","SpinnerContainer","Spinner","_jsxs","Container","TextContainer","TextTopContainer","WhiteText","TextBotContainer","SelectContainer","motion","div","whileTap","rotate","SelectTopContainer","style","borderStyle","borderColor","borderWidth","SelectImage","onClick","src","image","SelectBtn","title","VersusImgage","versusImage","SelectBotContainer","_templateObject2","_templateObject3","_templateObject4","p","_templateObject5","_templateObject6","_templateObject7","_templateObject8","span","_templateObject9","img","_templateObject10","_templateObject11","_templateObject12","_templateObject13","spin","keyframes","_templateObject14","_templateObject15"],"sourceRoot":""}