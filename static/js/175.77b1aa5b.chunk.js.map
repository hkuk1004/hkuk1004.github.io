{"version":3,"file":"static/js/175.77b1aa5b.chunk.js","mappings":"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","sources":["routes/DetailFeedView.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { styled } from \"styled-components\";\nimport { useParams, useNavigate, useLocation, useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ClipLoader } from \"react-spinners\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport Sheet from \"react-modal-sheet\";\n\nimport doteIcon from \"../assets/image/doteIcon.png\";\nimport emptyLikeIcon from \"../assets/image/emptyLikeIcon.png\";\nimport toggleLikeIcon from \"../assets/image/toggleLikeIcon.png\";\nimport commentIcon from \"../assets/image/commentIcon.png\";\nimport busIcon from \"../assets/image/busIcon.png\";\nimport personIcon from \"../assets/image/peopleIcon.png\";\nimport scheduleIcon from \"../assets/image/orangeScheduleIcon.png\";\nimport enrolledScIcon from \"../assets/image/scCommunityIcon.png\";\nimport blueRightIcon from \"../assets/image/blueRightArrow.png\";\n\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/scrollbar\";\n\nconst DetailFeedView = () => {\n  const [userId, setUserId] = useState(null);\n  const [jwt, setJwt] = useState(\"\");\n  const [rnSend, setRnSend] = useState(false);\n  const [rnData, setRnData] = useState({});\n  const [isApp, setIsApp] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [platform, setPlatform] = useState(null);\n  const [reviewMore, setReviewMore] = useState([false, false, false]);\n  const [feedId, setFeedId] = useState(null);\n  const reviewLimit = useRef(50);\n  const [detailFeedList, setDetailFeedList] = useState([]);\n  const [isOpen, setOpen] = useState(false);\n  const [reportModalOpen, setReportModalOpen] = useState(false);\n  const [option, setOption] = useState(\"\");\n  const [postId, setPostId] = useState(\"\");\n  const [feedText, setFeedText] = useState(\"\");\n  const [feedCate, setFeedCate] = useState(\"\");\n  const [pictureList, setPictureList] = useState([]);\n  const [writerBoolean, setWriterBoolean] = useState(false);\n  const [liked, setLiked] = useState([]);\n  const [reportList, setReportList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const FeedId = searchParams?.get(\"feedID\");\n  // console.log(FeedId);\n  // const [checkBoxStates, setCheckBoxStates] = useState(\n  //   Array(reportList?.length).fill(false),\n  // );\n  const [checkBoxStates, setCheckBoxStates] = useState(\n    Array.isArray(reportList) ? Array(reportList.length).fill(false) : []\n  );\n  const [reason, setReason] = useState(\"\");\n\n  useEffect(() => {\n    window.ReactNativeWebView?.postMessage(JSON.stringify(true));\n    //android\n    document.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        // setRnData(parseData);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData.loginData.jwt);\n          // alert(parseData.feedId);\n        }\n        setRnSend(true);\n        // setReLoad(parseData.reLoad);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n        setFeedId(parseData.feedId);\n        // alert(parseData.loginData.jwt);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    //ios\n    window.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        // setRnData(parseData);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData.loginData.jwt);\n          // alert(parseData.loginData.jwt);\n        }\n        setRnSend(true);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n        // setReLoad(parseData.reLoad);\n        setFeedId(parseData.feedId);\n        // alert(parseData.feedId);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (detailFeedList?.length <= 100) {\n      const copyDetailFeedList = [...detailFeedList];\n      const likedArr = copyDetailFeedList.map((item, idx) => {\n        return {\n          liked: item.isLiked,\n          count: item.likeCount,\n        };\n      });\n      setLiked(likedArr);\n    }\n  }, [detailFeedList]);\n\n  const handleDelete = async () => {\n    // 삭제 기능 처리\n    await axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}/feed/delete`,\n      headers: {\n        Authorization: jwt,\n      },\n      data: {\n        id: feedId,\n      },\n    })\n      .then((res) => {\n        alert(\"게시글이 삭제되었습니다.\");\n        moveGoBack();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setOpen(false);\n  };\n\n  const moveEditPost = (\n    feedId,\n    pictureList,\n    feedText,\n    feedCate,\n    scheduleId,\n    scheduleInfo,\n    recruit\n  ) => {\n    if (isApp) {\n      const data = {\n        name: \"moveEditPost\",\n        postId: feedId,\n        pictureList: pictureList,\n        feedText: feedText,\n        feedCate: feedCate,\n        recruit: recruit,\n        scheduleId: scheduleId,\n        scheduleInfo: scheduleInfo,\n        option: option,\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(data));\n    }\n  };\n  const moveMyPage = () => {\n    if (isApp) {\n      const data = {\n        name: \"moveMyPage\",\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(data));\n    }\n  };\n  const moveGoBack = () => {\n    if (isApp) {\n      const data = {\n        name: \"moveGoBack\",\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(data));\n    }\n  };\n  const moveComment = (feedid) => {\n    if (isApp) {\n      const data = {\n        name: \"moveComment\",\n        feedId: feedid,\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(data));\n    }\n  };\n  const moveSchedule = (scheduleId) => {\n    if (isApp) {\n      const data = {\n        name: \"moveSchedule\",\n        scheduleId: scheduleId,\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(data));\n    }\n  };\n  const moveUserProfile = (item) => {\n    if (isApp) {\n      const sendData = { ...item };\n      sendData.id = feedId;\n      const data = {\n        name: \"moveUserProfile\",\n        item: sendData,\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(data));\n    }\n  };\n  const likedToggleEvent = async (boolean, idx, feedId) => {\n    // console.log(loginData.id);\n    const clickLiked = async () => {\n      await axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_API_URL}/like/feed`,\n        headers: {\n          Authorization: jwt,\n        },\n        data: {\n          feedId: feedId,\n          userId: userId,\n        },\n      })\n        .then((res) => {\n          // console.log(res.data);\n          if (res.data.msg === \"Feed Liked successfully\") {\n            const copy = [...liked];\n            copy[idx].liked = true;\n            copy[idx].count += 1;\n            setLiked(copy);\n          } else {\n            const copy = [...liked];\n            copy[idx].liked = false;\n            copy[idx].count -= 1;\n            setLiked(copy);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    clickLiked();\n  };\n\n  const handleReport = () => {\n    // 신고 기능 처리\n    setReportModalOpen(true);\n    closeModal();\n  };\n\n  const ReportFeed = async (reason) => {\n    if (!selectedCategories) {\n      alert(\"신고사유를 선택해주세요.\");\n    } else {\n      let finalReason;\n      if (selectedCategories.includes(\"기타(직접 입력)\")) {\n        finalReason = reason;\n      } else {\n        finalReason = selectedCategories;\n      }\n      await axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_API_URL}/report/feed`,\n        headers: {\n          Authorization: jwt,\n        },\n        data: {\n          feedId: feedId,\n          reason: finalReason,\n        },\n      })\n        .then((res) => {\n          setReportModalOpen(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  const handleBlock = async () => {\n    // console.log(postId);\n    // console.log(viewOrder);\n    // 차단 기능 처리\n    await axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}/feed/blind`,\n      headers: {\n        Authorization: jwt,\n      },\n      data: {\n        userId: userId,\n        feedId: feedId,\n      },\n    })\n      .then((res) => {\n        moveGoBack();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    closeModal();\n  };\n\n  const commentFunc = (comment, idx) => {\n    const shortReview = comment?.slice(0, reviewLimit.current);\n    if (comment?.length > reviewLimit.current) {\n      if (reviewMore[idx]) {\n        return comment;\n      }\n      return shortReview + \"...\";\n    }\n    return comment;\n  };\n\n  const moreToggleEvent = (comment, idx) => {\n    const copyArr = [...reviewMore];\n    copyArr[idx] = !copyArr[idx];\n    setReviewMore(copyArr);\n  };\n\n  useEffect(() => {\n    const getDetailFeed = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}/user/myPageFeed?feedId=${feedId}`,\n        // url: `${process.env.REACT_APP_API_URL}/feed/feed1?feedId=${FeedId}`,\n        headers: {\n          // 'Access-Control-Allow-Credentials': true,\n          // 'ngrok-skip-browser-warning': true,\n          Authorization: jwt,\n        },\n      })\n        .then((res) => {\n          // alert(JSON.stringify(res.data));\n          setDetailFeedList(res.data.feedDetail);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    getDetailFeed();\n  }, [rnSend]);\n\n  useEffect(() => {\n    const getReportData = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}/report`,\n      })\n        .then((res) => {\n          // alert(JSON.stringify(res.data));\n          setReportList(res.data.cate);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    getReportData();\n  }, [rnSend]);\n\n  const handleCheckBoxChange = (index) => {\n    const newCheckBoxStates = [...checkBoxStates]; // 현재 상태 복사\n    newCheckBoxStates[index] = !newCheckBoxStates[index]; // 선택 상태 반전\n\n    for (let i = 0; i < newCheckBoxStates?.length; i++) {\n      if (i !== index) {\n        newCheckBoxStates[i] = false;\n      }\n    }\n    setCheckBoxStates(newCheckBoxStates);\n  };\n\n  const selectedCategories = reportList\n    .filter((_, index) => checkBoxStates[index]) // 체크된 항목 필터링\n    .map((item) => item.cate)\n    .join(\", \"); // item.cate 값만 가져오기\n  // console.log(selectedCategories);\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n  const closeReportModal = () => {\n    setReportModalOpen(false);\n  };\n  const openModal = (id, text, category, imgUrl, isWriter) => {\n    setOpen(true);\n    setPostId(id);\n    setOption(\"update\");\n    setFeedText(text);\n    setFeedCate(category);\n    setPictureList(imgUrl);\n    setWriterBoolean(isWriter);\n  };\n\n  const GoParticipate = async (item) => {\n    // console.log(item.id, item.registCheck);\n    if (jwt) {\n      await axios({\n        method: \"put\",\n        url: `${process.env.REACT_APP_API_URL}/feed/recruit`,\n        headers: {\n          Authorization: jwt,\n        },\n        data: {\n          feedID: feedId,\n          registCheck: !item.registCheck,\n        },\n      })\n        .then((res) => {\n          // alert(JSON.stringify(res.data));\n          if (res.data.isPass) {\n            const copy = [...detailFeedList];\n            copy[0].registCheck = !item.registCheck;\n            setDetailFeedList(copy);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      alert(\"로그인이 필요한 서비스입니다.\");\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <LoadingBox>\n          <ClipLoader color=\"#25B1FA\" />\n        </LoadingBox>\n      ) : (\n        <Container>\n          {detailFeedList?.map((item, index) => (\n            <CommunityContainer key={item}>\n              <CommunityTopArea>\n                <CommunityUserInfoArea\n                  onClick={() => moveUserProfile(item)}>\n                  <CommunityUserInfoImg src={item.user_profile} />\n                  <CommunityUserName>{item.user_name}</CommunityUserName>\n                </CommunityUserInfoArea>\n                <CommunityOptionImg\n                  onClick={() =>\n                    openModal(item.feedId, item.text, item.catecory, item.imgs, item.isWriter)\n                  }\n                  src={doteIcon}\n                />\n              </CommunityTopArea>\n              <CommunityPostImageArea>\n                <CustomSwiper\n                  style={{ height: 390 }}\n                  slidesPerView={1}\n                  // navigation\n                  centeredSlides={true}\n                  modules={[Pagination]}\n                  pagination={{\n                    clickable: true,\n                  }}\n                  scrollbar={{ draggable: true }}\n                  loop={true}\n                >\n                  {item.imgs.map((image, idx) => (\n                    <SwiperSlide key={idx}>\n                      <div\n                        style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n                      >\n                        <CommunityPostImg src={image} />\n                        {/* {item.oneDayTitle ? (\n                          <>\n                            <CommunityDayTripArea>\n                              <CommunityDayTripSpeakerImg src={busIcon} />\n                              <CommunityDayTripTitleText>\n                                {item.oneDayTitle}\n                              </CommunityDayTripTitleText>\n                            </CommunityDayTripArea>\n                            {item.isValid ? (\n                              <CommunityInfoPersonView onClick={() => moveParticipateFeed(item)}>\n                                <CommunityInfoIcon src={personIcon} />\n                                {item.recruit === \"단체\" ? (\n                                  <CommunityBlueText>\n                                    현재 모집인원: {item.recruitNumber}/{item.maxRecruit}\n                                  </CommunityBlueText>\n                                ) : (\n                                  <CommunityBlueText>\n                                    현재 모집인원: {item.recruitNumber}\n                                  </CommunityBlueText>\n                                )}\n                              </CommunityInfoPersonView>\n                            ) : (\n                              <></>\n                            )}\n\n                            <CommunityInfoDateView>\n                              <CommunityInfoIcon src={scheduleIcon} />\n                              <CommunityBlueText>\n                                여행일: {item.oneDayStartDate}~{item.oneDayEndDate}{\" \"}\n                              </CommunityBlueText>\n                            </CommunityInfoDateView>\n                          </>\n                        ) : null} */}\n                      </div>\n                    </SwiperSlide>\n                  ))}\n                </CustomSwiper>\n              </CommunityPostImageArea>\n              <CommunityIconArea>\n                <CommunityLeftIconArea>\n                  <CustomTouchableOpacity\n                    onClick={() => likedToggleEvent(liked[index]?.liked, index, item.feedId)}\n                  >\n                    {liked[index]?.liked ? (\n                      <CommunityIconImg src={toggleLikeIcon} />\n                    ) : (\n                      <CommunityIconImg src={emptyLikeIcon} />\n                    )}\n                  </CustomTouchableOpacity>\n                  <CommunityIconText>{liked[index]?.count}</CommunityIconText>\n                  <CustomTouchableOpacity onClick={() => moveComment(item.feedId)}>\n                    <CommunityIconImg style={{ marginLeft: 16 }} src={commentIcon} />\n                  </CustomTouchableOpacity>\n                  <CommunityIconText>{item.commentCount}</CommunityIconText>\n                </CommunityLeftIconArea>\n                {/* <CommunityRightIconArea>\n                <CustomTouchableOpacity>\n                  <CommunityIconImg src={shareIcon}/>\n                </CustomTouchableOpacity>\n              </CommunityRightIconArea> */}\n              </CommunityIconArea>\n              <CommunityPostTitleArea>\n                <CommunityPostTitleText>{commentFunc(item.text, index)}</CommunityPostTitleText>\n                <CommunityReadMoreBtn onClick={() => moreToggleEvent(item.text, index)}>\n                  {item.text?.length > reviewLimit.current && (reviewMore[index] ? \"\" : \"더보기\")}\n                </CommunityReadMoreBtn>\n              </CommunityPostTitleArea>\n              <CommunityBottomView>\n                <CommunityPostDateText>{item.createdAt}</CommunityPostDateText>\n                {item.scheduleId ? (\n                  <EnrolledSCView onClick={() => moveSchedule(item.scheduleId)}>\n                    <EnrolledSCIcon src={enrolledScIcon} />\n                    <EnrolledSCText>관련일정 보기</EnrolledSCText>\n                    <EnrolledSCIcon2 src={blueRightIcon} />\n                  </EnrolledSCView>\n                ) : null}\n              </CommunityBottomView>\n\n              {isOpen &&\n                (item.isWriter === true ? (\n                  <OptionSheet\n                    isOpen={isOpen}\n                    onClose={() => setOpen(false)}\n                    snapPoints={[\"25%\", \"25%\"]}\n                  >\n                    <Sheet.Container>\n                      <Sheet.Header />\n                      <CustomTouchableOpacity onClick={() => handleDelete()}>\n                        <Sheet.Content>\n                          <ModalRedText>삭제</ModalRedText>\n                        </Sheet.Content>\n                      </CustomTouchableOpacity>\n                      <GreyBorder />\n                      <CustomTouchableOpacity\n                        onClick={() =>\n                          moveEditPost(\n                            item.feedId,\n                            item.imgs,\n                            item.text,\n                            item.category,\n                            item.scheduleId,\n                            item.scheduleInfo,\n                            item.recruit\n                          )\n                        }\n                      >\n                        <Sheet.Content>\n                          <ModalBlackText>수정</ModalBlackText>\n                        </Sheet.Content>\n                      </CustomTouchableOpacity>\n                      <GreyBorder />\n                      <CustomTouchableOpacity onClick={closeModal}>\n                        <Sheet.Content>\n                          <ModalBlackText>취소</ModalBlackText>\n                        </Sheet.Content>\n                      </CustomTouchableOpacity>\n                    </Sheet.Container>\n                    <Sheet.Backdrop onClick={closeModal} />\n                  </OptionSheet>\n                ) : (\n                  <OptionSheet\n                    isOpen={isOpen}\n                    onClose={() => setOpen(false)}\n                    snapPoints={[\"25%\", \"25%\"]}\n                  >\n                    <Sheet.Container>\n                      <Sheet.Header />\n                      <CustomTouchableOpacity onClick={() => handleBlock()}>\n                        <Sheet.Content>\n                          <ModalRedText>숨기기</ModalRedText>\n                        </Sheet.Content>\n                      </CustomTouchableOpacity>\n                      <GreyBorder />\n                      <CustomTouchableOpacity onClick={() => handleReport()}>\n                        <Sheet.Content>\n                          <ModalBlackText>신고</ModalBlackText>\n                        </Sheet.Content>\n                      </CustomTouchableOpacity>\n                      <GreyBorder />\n                      <CustomTouchableOpacity onClick={closeModal}>\n                        <Sheet.Content>\n                          <ModalBlackText>취소</ModalBlackText>\n                        </Sheet.Content>\n                      </CustomTouchableOpacity>\n                    </Sheet.Container>\n                    <Sheet.Backdrop onClick={closeModal} />\n                  </OptionSheet>\n                ))}\n              {reportModalOpen && (\n                <ReportSheet\n                  isOpen={reportModalOpen}\n                  onClose={() => setReportModalOpen(false)}\n                  snapPoints={[700, 700, 700]}\n                >\n                  <Sheet.Container>\n                    <Sheet.Header />\n                    <ReportContainer>\n                      <ReportReasonContainer>\n                        <ReportDescText>\n                          게시글 또는 사용자를 신고하는 이유를 선택해주세요\n                        </ReportDescText>\n                        <ReportReasonView>\n                          {reportList.map((item, index) => (\n                            <ReportReasonCheckContent key={index}>\n                              <input\n                                type=\"checkbox\"\n                                style={{ width: 14, height: 14, borderRadius: 4 }}\n                                checked={checkBoxStates[index]}\n                                onChange={() => handleCheckBoxChange(index)}\n                              />\n                              <ReportReasonText>{item.cate}</ReportReasonText>\n                            </ReportReasonCheckContent>\n                          ))}\n                          <div style={{ position: \"relative\" }}>\n                            <ReasonInput\n                              placeholder={\"신고내용을 입력해주세요.\"}\n                              placeholderTextColor=\"#787878\"\n                              onChange={(e) => setReason(e.target.value)}\n                              style={{ resize: \"none\", textAlign: \"left\" }}\n                              maxLength={300}\n                              value={reason}\n                            />\n                            <ReasonTextCount>{reason.length} / 300자</ReasonTextCount>\n                          </div>\n                          <ReportDescription>\n                            <p>\n                              답변은 평균 7일 정도 소요됩니다.\n                              <br />\n                              신고하신 답변이 완료되면 이메일과 앱 푸시로 알려드려요.\n                              <br />앱 푸시가 꺼진 경우 알림이 가지 않으니, 푸시 설정을\n                              확인해주세요.\n                            </p>\n                          </ReportDescription>\n                          <ReportButton\n                            style={{\n                              backgroundColor: selectedCategories ? \"#25B1FA\" : \"#d9d9d9\",\n                            }}\n                            onClick={() => ReportFeed(reason)}\n                          >\n                            <ReportBtnText>작성 완료</ReportBtnText>\n                          </ReportButton>\n                        </ReportReasonView>\n                      </ReportReasonContainer>\n                    </ReportContainer>\n                  </Sheet.Container>\n                  <Sheet.Backdrop onClick={closeReportModal} />\n                </ReportSheet>\n              )}\n            </CommunityContainer>\n          ))}\n        </Container>\n      )}\n    </>\n  );\n};\nconst Container = styled.div`\n  vertical-align: middle;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  overflow-x: hidden;\n`;\nconst LoadingBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  /* height: 100vh; */\n`;\nconst CommunityContainer = styled.div`\n  display: flex;\n  /* align-items: center; */\n  /* justify-content: center; */\n  flex-direction: column;\n  width: 100%;\n  padding-top: 10px;\n  height: 100vh;\n`;\nconst CommunityTopArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-left: 30px;\n  padding-right: 16px;\n  justify-content: space-between;\n  /* background-color: yellow; */\n`;\nconst CommunityUserInfoArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst CommunityUserInfoImg = styled.img`\n  display: flex;\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n`;\nconst CommunityUserName = styled.span`\n  display: flex;\n  font-size: 16px;\n  color: #000000;\n  font-weight: 400;\n  margin-left: 10px;\n`;\nconst CommunityOptionImg = styled.img`\n  display: flex;\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n`;\nconst CommunityPostImageArea = styled.div`\n  display: flex;\n  margin-top: 16px;\n  /* position: relative; */\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 390px;\n`;\nconst CommunityPostImg = styled.img`\n  display: flex;\n  width: 100%;\n  height: 390px;\n  object-fit: contain;\n`;\nconst CommunityDayTripArea = styled.div`\n  display: flex;\n  width: auto;\n  height: 44px;\n  border: 1px solid #25b1fa;\n  border-radius: 8px;\n  position: absolute;\n  background-color: white;\n  top: 16px;\n  align-items: center;\n  justify-content: center;\n`;\nconst CommunityDayTripSpeakerImg = styled.img`\n  display: flex;\n  width: 38px;\n  height: 38px;\n  margin-left: 14px;\n`;\nconst CommunityDayTripTitleText = styled.span`\n  color: #25b1fa;\n  font-size: 14px;\n  font-weight: 700;\n  text-align: center;\n  margin-left: 6px;\n  margin-right: 26px;\n`;\nconst CommunityIconArea = styled.div`\n  display: flex;\n  margin-top: 6px;\n  padding-left: 20px;\n  padding-right: 20px;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n`;\nconst CommunityLeftIconArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst CommunityIconImg = styled.img`\n  display: flex;\n  width: 24px;\n  height: 24px;\n`;\nconst CommunityIconText = styled.span`\n  display: flex;\n  color: #000000;\n  font-size: 14px;\n  margin-left: 4px;\n`;\nconst RecruitBtn = styled.button`\n  width: auto;\n  height: 35px;\n  border-radius: 8px;\n  border: 1px solid #25b1fa;\n  padding: 8px 16px 8px 16px;\n  align-items: center;\n  justify-content: center;\n  background-color: #25b1fa;\n  font-weight: 500;\n  font-size: 12px;\n  color: #ffffff;\n  text-align: center;\n`;\nconst CommunityRightIconArea = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst CommunityPostTitleArea = styled.div`\n  display: flex;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-top: 4px;\n  flex-direction: column;\n`;\nconst CommunityPostTitleText = styled.span`\n  display: block;\n  font-size: 14px;\n  font-weight: 400px;\n  color: #292929;\n  overflow: hidden;\n  /* text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical; */\n  word-break: break-all;\n  margin-bottom: 4px;\n  white-space: pre-line;\n`;\nconst CommunityPostDateText = styled.span`\n  display: flex;\n  font-size: 10px;\n  color: #737373;\n  font-weight: 400;\n  padding-left: 20px;\n  /* margin-top: 9px; */\n`;\nconst CommunityReadMoreBtn = styled.div`\n  color: #737373;\n  font-size: 14px;\n  font-weight: 400;\n  display: inline;\n  align-items: center;\n  justify-content: center;\n  color: #737373;\n  cursor: pointer;\n`;\nconst CustomTouchableOpacity = styled.button``;\nconst CustomSwiper = styled(Swiper)`\n  position: relative;\n  .swiper-pagination {\n    /* position: absolute; */\n    /* display: block; */\n    /* top: 97%; */\n    /* z-index: 2; */\n  }\n  .swiper-pagination-bullet {\n    width: 6px;\n    height: 6px;\n    background: transparent;\n    border: 1px solid #68b8ff;\n    opacity: 1;\n  }\n\n  .swiper-pagination-bullet-active {\n    width: 20px;\n    height: 6px;\n    transition: width 0.5s;\n    border-radius: 5px;\n    background: #68b8ff;\n    border: 1px solid transparent;\n  }\n  .swiper-pagination-horizontal {\n    opacity: 0.5;\n  }\n`;\nconst OptionSheet = styled(Sheet)`\n  /* background-color: rgba(0, 0, 0, 0.5); */\n  .react-modal-sheet-backdrop {\n    /* width: 100%; */\n    /* height: 100%; */\n    background-color: rgba(0, 0, 0, 0.5);\n    /* display: flex; */\n  }\n  .react-modal-sheet-container {\n    /* display: flex; */\n    /* justify-content: center; */\n    justify-content: flex-end;\n    /* width: 100%; */\n    /* height: 100%; */\n    align-items: center;\n    height: 100vh;\n    /* flex-direction: column; */\n  }\n  .react-modal-sheet-content {\n    /* display: flex; */\n    justify-content: center;\n    /* align-items: center; */\n    /* flex-direction: column; */\n    background-color: white;\n    /* width: 100%; */\n    height: 40px;\n    /* border-top-left-radius: 20px; */\n    /* border-top-right-radius: 20px;/ */\n    /* border-radius: 10px; */\n  }\n`;\nconst ModalRedText = styled.span`\n  display: flex;\n  font-size: 14px;\n  font-weight: 400;\n  text-align: center;\n  color: #ff0000;\n`;\nconst ModalBlackText = styled.span`\n  display: flex;\n  font-size: 14px;\n  font-weight: 400;\n  text-align: center;\n  color: #000;\n`;\nconst GreyBorder = styled.div`\n  display: flex;\n  width: 100%;\n  border: 1px solid #d9d9d9;\n`;\nconst ReportSheet = styled(Sheet)`\n  .react-modal-sheet-backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n  .react-modal-sheet-container {\n  }\n`;\n\nconst ReportContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  border-width: 1px;\n  border-color: #999;\n  padding-left: 20px;\n  padding-right: 20px;\n  background-color: #fff;\n  align-items: center;\n  position: absolute;\n  bottom: 0;\n`;\nconst ReportDescText = styled.span`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  color: #000000;\n  margin-top: 40px;\n`;\nconst ReportReasonContainer = styled.div`\n  display: flex;\n  margin-top: 10px;\n  flex-direction: column;\n`;\nconst ReportReasonView = styled.div`\n  display: flex;\n  margin-top: 10px;\n  flex-direction: column;\n  justify-content: center;\n  /* background-color: green; */\n`;\nconst ReportReasonCheckContent = styled.div`\n  /* width: 100%; */\n  margin-top: 12px;\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n  /* background-color: yellow; */\n`;\nconst ReportReasonText = styled.span`\n  display: flex;\n  color: #737373;\n  line-height: 20.27px;\n  font-size: 14px;\n  font-weight: 500;\n  margin-left: 8px;\n`;\nconst ReasonInput = styled.textarea`\n  display: flex;\n  height: 103px;\n  border-width: 1px;\n  width: 100%;\n  border-color: #e6e6e6;\n  background-color: #e6e6e6;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  margin-top: 17px;\n  /* margin-left: 20px; */\n  /* margin-right: 20px; */\n`;\nconst ReasonTextCount = styled.span`\n  display: flex;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #999999;\n  position: absolute;\n  right: 0;\n`;\nconst ReportDescription = styled.span`\n  display: flex;\n  font-weight: 500;\n  font-size: 12px;\n  color: #999999;\n  margin-top: 30px;\n`;\nconst ReportButton = styled.button`\n  display: flex;\n  /* width: 353px; */\n  height: 54px;\n  border-radius: 8px;\n  padding: 8px 16px 8px 16px;\n  margin-top: 12px;\n  align-items: center;\n  justify-content: center;\n  background-color: #d9d9d9;\n`;\nconst ReportBtnText = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 23.17px;\n  color: #ffffff;\n  text-align: center;\n`;\n// const CommunityInfoArea = styled.div`\n//   display: flex;\n//   position: absolute;\n//   flex-direction: column;\n//   bottom: 10px;\n//   left: 10px;\n//   height: 70px;\n//   justify-content: space-between;\n// `;\nconst CommunityInfoPersonView = styled.div`\n  display: flex;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid white;\n  position: absolute;\n  /* width: 154px; */\n  width: inherit;\n  align-items: center;\n  flex-direction: row;\n  height: 30px;\n  padding-right: 12px;\n  left: 10px;\n  bottom: 50px;\n`;\nconst CommunityInfoDateView = styled.div`\n  display: flex;\n  width: auto;\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid white;\n  position: absolute;\n  align-items: center;\n  flex-direction: row;\n  height: 30px;\n  bottom: 10px;\n  left: 10px;\n  padding-right: 12px;\n`;\nconst CommunityInfoIcon = styled.img`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  margin-left: 12px;\n`;\nconst CommunityBlueText = styled.span`\n  display: flex;\n  color: #25b1fa;\n  font-size: 12px;\n  font-weight: 700;\n  margin-left: 6px;\n`;\nconst CommunityBottomView = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 9px;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst EnrolledSCView = styled.div`\n  display: flex;\n  align-items: center;\n  padding-right: 22px;\n  flex-direction: row;\n`;\nconst EnrolledSCIcon = styled.img`\n  display: flex;\n  width: 16px;\n  height: 16px;\n`;\nconst EnrolledSCText = styled.span`\n  display: flex;\n  font-weight: 400;\n  font-size: 10px;\n  margin-left: 4px;\n  margin-right: 6px;\n  color: #25b1fa;\n`;\nconst EnrolledSCIcon2 = styled.img`\n  display: flex;\n  width: 10px;\n  height: 10px;\n`;\nexport default DetailFeedView;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","LoadingBox","_templateObject2","CommunityContainer","_templateObject3","CommunityTopArea","_templateObject4","CommunityUserInfoArea","_templateObject5","CommunityUserInfoImg","img","_templateObject6","CommunityUserName","span","_templateObject7","CommunityOptionImg","_templateObject8","CommunityPostImageArea","_templateObject9","CommunityPostImg","_templateObject10","CommunityIconArea","_templateObject11","_templateObject12","_templateObject13","_templateObject14","CommunityLeftIconArea","_templateObject15","CommunityIconImg","_templateObject16","CommunityIconText","_templateObject17","CommunityPostTitleArea","button","_templateObject18","_templateObject19","_templateObject20","CommunityPostTitleText","_templateObject21","CommunityPostDateText","_templateObject22","CommunityReadMoreBtn","_templateObject23","CustomTouchableOpacity","_templateObject24","CustomSwiper","Swiper","_templateObject25","OptionSheet","Sheet","_templateObject26","ModalRedText","_templateObject27","ModalBlackText","_templateObject28","GreyBorder","_templateObject29","ReportSheet","_templateObject30","ReportContainer","_templateObject31","ReportDescText","_templateObject32","ReportReasonContainer","_templateObject33","ReportReasonView","_templateObject34","ReportReasonCheckContent","_templateObject35","ReportReasonText","_templateObject36","ReasonInput","textarea","_templateObject37","ReasonTextCount","_templateObject38","ReportDescription","_templateObject39","ReportButton","_templateObject40","ReportBtnText","_templateObject41","CommunityBottomView","_templateObject42","_templateObject43","_templateObject44","_templateObject45","_templateObject46","EnrolledSCView","_templateObject47","EnrolledSCIcon","_templateObject48","EnrolledSCText","_templateObject49","EnrolledSCIcon2","_templateObject50","DetailFeedView","userId","setUserId","useState","jwt","setJwt","rnSend","setRnSend","rnData","setRnData","isApp","setIsApp","loading","setLoading","platform","setPlatform","reviewMore","setReviewMore","feedId","setFeedId","reviewLimit","useRef","detailFeedList","setDetailFeedList","isOpen","setOpen","reportModalOpen","setReportModalOpen","option","setOption","postId","setPostId","feedText","setFeedText","feedCate","setFeedCate","pictureList","setPictureList","writerBoolean","setWriterBoolean","liked","setLiked","reportList","setReportList","searchParams","setSearchParams","useSearchParams","checkBoxStates","setCheckBoxStates","Array","isArray","length","fill","reason","setReason","useEffect","_window$ReactNativeWe","window","ReactNativeWebView","postMessage","JSON","stringify","document","addEventListener","e","parseData","parse","data","loginData","id","err","console","log","likedArr","map","item","idx","isLiked","count","likeCount","moveGoBack","_window$ReactNativeWe4","name","commentFunc","comment","shortReview","slice","current","async","axios","method","url","concat","process","headers","Authorization","then","res","feedDetail","catch","getDetailFeed","cate","getReportData","selectedCategories","filter","_","index","join","closeModal","closeReportModal","_jsx","_Fragment","children","ClipLoader","color","_liked$index2","_liked$index3","_item$text","_jsxs","onClick","_window$ReactNativeWe7","sendData","moveUserProfile","src","user_profile","user_name","openModal","text","category","catecory","imgUrl","imgs","isWriter","doteIcon","style","height","slidesPerView","centeredSlides","modules","Pagination","pagination","clickable","scrollbar","draggable","loop","image","SwiperSlide","display","alignItems","justifyContent","_liked$index","boolean","msg","copy","clickLiked","likedToggleEvent","toggleLikeIcon","emptyLikeIcon","feedid","_window$ReactNativeWe5","moveComment","marginLeft","commentIcon","commentCount","moreToggleEvent","copyArr","createdAt","scheduleId","_window$ReactNativeWe6","moveSchedule","enrolledScIcon","blueRightIcon","onClose","snapPoints","Header","alert","handleDelete","Content","moveEditPost","scheduleInfo","recruit","_window$ReactNativeWe2","Backdrop","handleBlock","type","width","borderRadius","checked","onChange","newCheckBoxStates","i","handleCheckBoxChange","position","placeholder","placeholderTextColor","target","value","resize","textAlign","maxLength","backgroundColor","finalReason","includes","ReportFeed"],"sourceRoot":""}