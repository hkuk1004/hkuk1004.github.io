{"version":3,"file":"static/js/895.4eca9576.chunk.js","mappings":"4MAIA,MAAMA,EACN,mGACMC,EAAU,8CACVC,EAAS,EACTC,EAAY,IAEZC,EAAa,CACjB,CACEC,KAAM,EACNC,OAAQ,GAEV,CACED,KAAM,EACNC,OAAQ,GAEV,CACED,KAAM,EACNC,OAAQ,GAEV,CACED,KAAM,EACNC,OAAQ,GAEV,CACED,KAAM,EACNC,OAAQ,GAEV,CACED,KAAM,EACNC,OAAQ,GAEV,CACED,KAAM,EACNC,OAAQ,GAEV,CACED,KAAM,EACNC,OAAQ,GAEV,CACED,KAAM,EACNC,OAAQ,IAINC,EAAcC,OAAOC,OAAOC,GAG5BC,EAAgBC,GACbC,KAAKC,MAAMD,KAAKE,SAAYH,EAAII,QA2CnCC,EApBSC,KAAqC,IAC9CC,GADU,cAACC,EAAa,KAACC,EAAI,KAACC,EAAI,KAACC,GAAKL,EAe9C,OAZoB,IAAhBG,EAAKL,QAAgC,IAAhBM,EAAKN,QAAgC,IAAhBO,EAAKP,OACjDG,EAAG,GAAAK,OAAMvB,EAAO,+BAAAuB,OAA8BxB,EAAU,YAAAwB,OAAWtB,EAAM,eAAAsB,OAAcrB,EAAS,4DAAAqB,OAA2DJ,EAAa,UAAAI,OAASH,EAAI,UAAAG,OAASF,EAAI,UAAAE,OAASD,EAAI,eACtL,IAAhBF,EAAKL,QAAgC,IAAhBM,EAAKN,QAAgC,IAAhBO,EAAKP,OACxDG,EAAG,GAAAK,OAAMvB,EAAO,+BAAAuB,OAA8BxB,EAAU,YAAAwB,OAAWtB,EAAM,eAAAsB,OAAcrB,EAAS,4DAAAqB,OAA2DJ,EAAa,UAAAI,OAASH,EAAI,UAAAG,OAASF,EAAI,eACzK,IAAhBD,EAAKL,QAAgC,IAAhBM,EAAKN,QAAgC,IAAhBO,EAAKP,QACxDS,QAAQC,IAAI,GACZP,EAAG,GAAAK,OAAMvB,EAAO,+BAAAuB,OAA8BxB,EAAU,YAAAwB,OAAWtB,EAAM,eAAAsB,OAAcrB,EAAS,4DAAAqB,OAA2DJ,EAAa,UAAAI,OAASH,EAAI,gBAC5J,IAAhBA,EAAKL,QAAgC,IAAhBM,EAAKN,QAAgC,IAAhBO,EAAKP,SACxDS,QAAQC,IAAI,GACZP,EAAG,GAAAK,OAAMvB,EAAO,+BAAAuB,OAA8BxB,EAAU,YAAAwB,OAAWtB,EAAM,eAAAsB,OAAcrB,EAAS,4DAAAqB,OAA2DJ,EAAa,gBAGnKD,CAAG,EAKMQ,CAxCOC,KACrB,MAAMC,EAAW,GACjB,IAAK,MAAMC,KAAaF,EACtB,IAAK,MAAMG,KAAcxB,EACvB,GAAIuB,EAAUzB,OAAS0B,EAAW1B,KAAM,CACtC,MAAM2B,EAAWrB,EAAaoB,EAAWE,QAAQH,EAAUxB,SAE3DuB,EAASK,KAAK,CACZ7B,KAAMyB,EAAUzB,KAChB8B,IAAKJ,EAAWE,QAAQH,EAAUxB,QAAQ0B,KAE5C,KACF,CAIJ,OAAOH,CAAQ,EAsBFO,CAAchC,GAEC,GAAG+B,KAI3BE,EAAcC,IAClB,MAEMC,EAAWD,EAFC3B,EAAa2B,IAI/B,GAAmC,IAA/BC,EAASC,WAAWxB,OAGtB,OAAOuB,EAFPF,EAAWC,EAGb,EAGIG,EAAgBC,UACpB,IACE,MACMC,SADYC,EAAAA,EAAMC,IAAI1B,IACP2B,KAAKC,SAASC,KAAKC,MAAMC,KAE9C,OADeb,EAAWM,EAE5B,CAAE,MAAOQ,GACP1B,QAAQC,IAAI,eAAMyB,EAEpB,GAGIC,QAAkBX,EAAcxB,GACtCQ,QAAQC,IAAI0B,GAUZ,MAoCA,EApCYC,KAiCHC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,Q","sources":["routes/New.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport cate from \"../data/category.json\";\r\n\r\nconst serviceKey =\r\n\"eRLOwH19Z%2FYOTC00zcefvpxvwseGUrgSsocmGQ0SiDLenLDTZtVZRYaMYwScpSNCHiQBLDrbYbFFDkyqu%2FdjcQ%3D%3D\";\r\nconst baseUrl = \"https://apis.data.go.kr/B551011/KorService1\";\r\nconst pageNo = 1;\r\nconst numOfRows = 20000\r\n\r\nconst firstArray = [\r\n  {\r\n    QNum: 1,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 2,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 3,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 4,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 5,\r\n    AnsIdx: 1,\r\n  },\r\n  {\r\n    QNum: 6,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 7,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 8,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 9,\r\n    AnsIdx: 0,\r\n  },\r\n];\r\n\r\nconst secondArray = Object.values(cate);\r\n\r\n\r\nconst randomNumber = (arr) => {\r\n  return Math.floor(Math.random() * (arr.length));\r\n};\r\n\r\nconst sortedAnsList = (totalAns) =>{\r\n  const newArray = [];\r\n  for (const firstItem of totalAns) {\r\n    for (const secondItem of secondArray) {\r\n      if (firstItem.QNum === secondItem.QNum) {\r\n        const randomIdx= randomNumber(secondItem.AnsList[firstItem.AnsIdx])\r\n\r\n        newArray.push({\r\n          QNum: firstItem.QNum,\r\n          Ans: secondItem.AnsList[firstItem.AnsIdx][randomIdx],\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return newArray\r\n\r\n}\r\n\r\nconst getURL = ({contentTypeId,cat1,cat2,cat3}) => {\r\n  let url;\r\n\r\nif (cat1.length === 3 && cat2.length === 5 && cat3.length === 9) {\r\n  url = `${baseUrl}/areaBasedList1?serviceKey=${serviceKey}&pageNo=${pageNo}&numOfRows=${numOfRows}&MobileApp=AppTest&MobileOS=ETC&arrange=A&contentTypeId=${contentTypeId}&cat1=${cat1}&cat2=${cat2}&cat3=${cat3}&_type=json`;\r\n} else if (cat1.length === 3 && cat2.length === 5 && cat3.length !== 9) {\r\n  url = `${baseUrl}/areaBasedList1?serviceKey=${serviceKey}&pageNo=${pageNo}&numOfRows=${numOfRows}&MobileApp=AppTest&MobileOS=ETC&arrange=A&contentTypeId=${contentTypeId}&cat1=${cat1}&cat2=${cat2}&_type=json`;\r\n} else if (cat1.length === 3 && cat2.length !== 5 && cat3.length !== 9) {\r\n  console.log(1);\r\n  url = `${baseUrl}/areaBasedList1?serviceKey=${serviceKey}&pageNo=${pageNo}&numOfRows=${numOfRows}&MobileApp=AppTest&MobileOS=ETC&arrange=A&contentTypeId=${contentTypeId}&cat1=${cat1}&_type=json`;\r\n} else if (cat1.length !== 3 && cat2.length !== 5 && cat3.length !== 9) {\r\n  console.log(3);\r\n  url = `${baseUrl}/areaBasedList1?serviceKey=${serviceKey}&pageNo=${pageNo}&numOfRows=${numOfRows}&MobileApp=AppTest&MobileOS=ETC&arrange=A&contentTypeId=${contentTypeId}&_type=json`;\r\n}\r\n\r\nreturn url\r\n};\r\n\r\nconst forURL = sortedAnsList(firstArray)\r\n\r\nconst testUrl = getURL(forURL[1].Ans)\r\n\r\n// console.log(getURL(forURL[0].Ans));\r\n\r\nconst makeRandom = (itemArr) => {\r\n  const randomIdx = randomNumber(itemArr)\r\n\r\n  const tempSpot = itemArr[randomIdx];\r\n\r\n  if (tempSpot.firstimage.length === 0) {\r\n    makeRandom(itemArr);\r\n  } else {\r\n    return tempSpot\r\n  }\r\n};\r\n\r\nconst getRandomSpot = async (url) => {\r\n  try {\r\n    const res = await axios.get(url);\r\n    const itemList = res.data.response.body.items.item;\r\n    const result = makeRandom(itemList);\r\n    return result;\r\n  } catch (err) {\r\n    console.log(\"에러\", err);\r\n    // throw err; \r\n  }\r\n};\r\n\r\nconst resultOne = await getRandomSpot(testUrl)\r\nconsole.log(resultOne)\r\n\r\n\r\n\r\n\r\n// firstArray[0].AnsIdx\r\n\r\n// console.log(sortedAnsList(firstArray));\r\n\r\n\r\nconst New = () => {\r\n\r\n\r\n\r\n\r\n\r\n  // // 새로운 배열 생성\r\n  // const newArray = [];\r\n  // for (const firstItem of firstArray) {\r\n  //   for (const secondItem of secondArray) {\r\n  //     if (firstItem.QNum === secondItem.QNum) {\r\n  //       const randomIdx= randomNumber(secondItem.AnsList[firstItem.AnsIdx])\r\n\r\n  //       newArray.push({\r\n  //         QNum: firstItem.QNum,\r\n  //         Ans: secondItem.AnsList[firstItem.AnsIdx][randomIdx],\r\n  //       });\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // console.log(newArray);\r\n  // console.log(getURL(newArray[0].Ans))\r\n\r\n\r\n  return <div>New</div>;\r\n};\r\n\r\nexport default New;\r\n"],"names":["serviceKey","baseUrl","pageNo","numOfRows","firstArray","QNum","AnsIdx","secondArray","Object","values","cate","randomNumber","arr","Math","floor","random","length","testUrl","_ref","url","contentTypeId","cat1","cat2","cat3","concat","console","log","getURL","totalAns","newArray","firstItem","secondItem","randomIdx","AnsList","push","Ans","sortedAnsList","makeRandom","itemArr","tempSpot","firstimage","getRandomSpot","async","itemList","axios","get","data","response","body","items","item","err","resultOne","New","_jsx","children"],"sourceRoot":""}