{"version":3,"file":"static/js/77.98c5a386.chunk.js","mappings":"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","sources":["components/Button.jsx","routes/InsuranceGameSelectResult.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport styled from \"styled-components\";\n\nconst FullButton = styled.button`\n  background: ${(props) => (props.type === \"basic\" ? \"#6A8BFF\" : \"#ffffff\")};\n  color: ${(props) => (props.type === \"basic\" ? \"#ffffff\" : \"#000000\")};\n  border: ${(props) => (props.type === \"basic\" ? \"none\" : \"1px solid #000000\")};\n  border-radius: 8px;\n  display: block;\n  width: 100%;\n  height: ${(props) => props.height};\n  box-shadow: 0px 0px 10px rgba(0, 28, 145, 0.2);\n  font-weight: 500;\n  font-size: 1em;\n  line-height: 1.25em;\n  letter-spacing: -0.07em;\n  text-align: center;\n\n  /* &:hover {\n    box-shadow: 0 80px 0 0 rgba(0, 0, 0, 0.25) inset,\n      0 -80px 0 0 rgba(0, 0, 0, 0.25) inset;\n  } */\n\n  &:active {\n    background: ${(props) => (props.type === \"basic\" ? \"#021248\" : \"#ffffff\")};\n\n  }\n`;\n// height : em, forn-size : 반응형\nconst Button = ({ children, type, height, ...rest }) => {\n\n  return (\n    <FullButton type={type} height={height}{...rest}>\n      {children}\n    </FullButton>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, useLocation, useSearchParams } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport { styled } from \"styled-components\";\nimport axios from \"axios\";\nimport testImage1 from \"../assets/image/test_image1.png\";\nimport testImage2 from \"../assets/image/test_image2.png\";\nimport testImage3 from \"../assets/image/test_image3.png\";\nimport shareBtn from \"../assets/image/wc_shareBtn.png\";\nimport saveBtn from \"../assets/image/wc_saveBtn.png\";\nimport saveActiveBtn from \"../assets/image/bookMarkActive.png\";\nimport SelectCheck from \"../assets/image/worldcupWinSelectImage.png\";\nimport tipIcon from \"../assets/image/tipIcon.png\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst InsuranceGameSelectResult = () => {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [userId, setUserId] = useState(\"\");\n  const [jwt, setJwt] = useState(\"\");\n  const [rnSend, setRnSend] = useState(false);\n  const [isApp, setIsApp] = useState(null);\n  const [platform, setPlatform] = useState(null);\n  // const [bookMarkList1, setBookMarkList1] = useState([]);\n  // const [bookMarkList2, setBookMarkList2] = useState([]);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const pathId = searchParams.get(\"id\");\n\n  const getData = async () => {\n    setIsLoading(true);\n    const reqJwt = state ? state.jwt : jwt;\n    await axios({\n      method: \"get\",\n      headers: {\n        \"Access-Control-Allow-Credentials\": true,\n        \"ngrok-skip-browser-warning\": true,\n        Authorization: reqJwt,\n      },\n      url: `${process.env.REACT_APP_API_URL}/insurancegame/result?insuranceGameId=${\n        state ? state.pathId : pathId\n      }&${reqJwt ? \"\" : \"guest_name=\" + state.guest_name}`,\n    })\n      .then((res) => {\n        // alert(JSON.stringify(res.data));\n        setData(res.data.insuranceResult);\n        // let copyData1 = [...res.data.insuranceResult.recommendPlace1].map((el) => el.bookMark);\n        // let copyData2 = [...res.data.insuranceResult.recommendPlace2].map((el) => el.bookMark);\n        // setBookMarkList1(copyData1);\n        // setBookMarkList2(copyData2);\n        setIsLoading(false);\n        // alert(`jwt: ${state ? state.jwt : jwt},${JSON.stringify(res.data)}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  // const focusedData = async () => {\n  //   const reqJwt = state ? state.jwt : jwt;\n  //   await axios({\n  //     method: \"get\",\n  //     headers: {\n  //       \"Access-Control-Allow-Credentials\": true,\n  //       \"ngrok-skip-browser-warning\": true,\n  //       Authorization: reqJwt,\n  //     },\n  //     url: `${process.env.REACT_APP_API_URL}/insurancegame/result?insuranceGameId=${\n  //       state ? state.pathId : pathId\n  //     }`,\n  //   })\n  //     .then((res) => {\n  //       console.log(res.data);\n  //       // alert(JSON.stringify(res.data));\n  //       alert(JSON.stringify(jwt));\n  //       // setData(res.data.insuranceResult);\n  //       let copyData1 = [...res.data.insuranceResult.recommendPlace1].map((el) => el.bookMark);\n  //       let copyData2 = [...res.data.insuranceResult.recommendPlace2].map((el) => el.bookMark);\n  //       setBookMarkList1(copyData1);\n  //       setBookMarkList2(copyData2);\n  //       // alert(`jwt: ${state ? state.jwt : jwt},${JSON.stringify(res.data)}`);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  useEffect(() => {\n    if (!state) {\n      window.ReactNativeWebView?.postMessage(JSON.stringify(true));\n      //android\n      document.addEventListener(\"message\", (e) => {\n        try {\n          const parseData = JSON.parse(e.data);\n          if (parseData.loginData) {\n            setUserId(parseData.loginData.id);\n            setJwt(parseData.loginData.jwt);\n          }\n          setRnSend(true);\n          setIsApp(parseData.isApp);\n          setPlatform(parseData.platform);\n          if (parseData?.focused && rnSend) {\n            getData();\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      });\n      //ios\n      window.addEventListener(\"message\", (e) => {\n        try {\n          const parseData = JSON.parse(e.data);\n          if (parseData.loginData) {\n            setUserId(parseData.loginData.id);\n            setJwt(parseData.loginData.jwt);\n          }\n          setRnSend(true);\n          setIsApp(parseData.isApp);\n          setPlatform(parseData.platform);\n          if (parseData?.focused && rnSend) {\n            getData();\n          }\n        } catch (err) {\n          console.log(err);\n        }\n        // alert(\"jwt없을때\");\n      });\n    }\n    // 카카오톡 sdk 추가\n    const script = document.createElement(\"script\");\n    script.src = \"https://developers.kakao.com/sdk/js/kakao.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    return () => document.body.removeChild(script);\n  }, []);\n\n  useEffect(() => {\n    if (rnSend || state) {\n      getData();\n    }\n  }, [rnSend]);\n\n  const moveMorePlace = (idx) => {\n    if (state?.isApp || isApp) {\n      const sendData = {\n        name: \"moveMorePlace\",\n        insuranceName: data?.insuranceInfo[idx].insuranceName,\n        insuranceNameId: data?.insuranceInfo[idx].insuranceNameId,\n        insuranceGameId: state ? state.pathId : pathId,\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(sendData));\n    } else {\n      navigate(\"/insurancemoreplace\", {\n        state: {\n          jwt: state ? state.jwt : jwt,\n          userId: state ? state.userId : userId,\n          isApp: state ? state.isApp : isApp,\n          platform: state ? state.platform : platform,\n          insuranceName: data?.insuranceInfo[idx].insuranceName,\n          insuranceNameId: data?.insuranceInfo[idx].insuranceNameId,\n          insuranceGameId: state ? state.pathId : pathId,\n        },\n      });\n    }\n  };\n\n  const moveInsuranceGame = (el) => {\n    navigate(`/insurancegameselect?id=${el}`);\n  };\n\n  const movePlaceDetail = (el) => {\n    if (state?.isApp || isApp) {\n      const sendData = {\n        name: \"movePlaceDetail\",\n        contentId: el.contentid,\n        typeId: el.contenttypeid,\n        title: el.title,\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(sendData));\n    } else {\n      navigate(`/placedetail/${el.contentid}/${el.contenttypeid}`);\n    }\n  };\n  // const saveEvent = (event, listNum, idx, contentId) => {\n  //   event.stopPropagation();\n  //   const copyList1 = [...bookMarkList1];\n  //   const copyList2 = [...bookMarkList2];\n  //   if (!(state ? state.isApp : isApp)) {\n  //     alert(\"여행대로 APP을 이용해주세요.\");\n  //   } else {\n  //     if (!(state ? state.jwt : jwt)) {\n  //       alert(\"로그인이 필요합니다.\");\n  //     } else {\n  //       if (listNum === 1) {\n  //         if (\n  //           window.confirm(\n  //             copyList1[idx] ? \"장소 저장을 취소하시겠습니까?\" : \"장소를 저장하시겠습니까?\"\n  //           )\n  //         ) {\n  //           reqSave(copyList1, idx, setBookMarkList1, contentId);\n  //           // copyList1[idx] = !copyList1[idx];\n  //           // setBookMarkList1(copyList1);\n  //         } else {\n  //           return;\n  //         }\n  //       } else {\n  //         if (\n  //           window.confirm(\n  //             copyList2[idx] ? \"장소 저장을 취소하시겠습니까?\" : \"장소를 저장하시겠습니까?\"\n  //           )\n  //         ) {\n  //           copyList2[idx] = !copyList2[idx];\n  //           setBookMarkList2(copyList2);\n  //         } else {\n  //           return;\n  //         }\n  //       }\n  //     }\n  //   }\n  // };\n  // const reqSave = async (list, idx, setList, contentId) => {\n  //   await axios({\n  //     method: \"post\",\n  //     url: `${process.env.REACT_APP_API_URL}/save`,\n  //     headers: {\n  //       Authorization: state ? state.jwt : jwt,\n  //     },\n  //     data: {\n  //       id: state ? state.userId : userId,\n  //       contentid: contentId,\n  //     },\n  //   })\n  //     .then((res) => {\n  //       if (res.data.boolean) {\n  //         // alert(JSON.stringify(res.data));\n  //         list[idx] = !list[idx];\n  //         setList(list);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  const kakaoShareEvent = (event, el) => {\n    event.stopPropagation();\n    if (state?.isApp || isApp) {\n      const sendData = {\n        name: \"kakaoShare\",\n        contentId: el.contentid,\n        typeId: el.contenttypeid,\n        title: el.title,\n        image: el.firstimage,\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(sendData));\n    } else {\n      if (window.Kakao) {\n        const kakao = window.Kakao;\n\n        if (!kakao.isInitialized()) {\n          // javascript key\n          kakao.init(\"69c873f1cf4e580ab99c761390d9777e\");\n        }\n        kakao.Link.sendDefault({\n          objectType: \"feed\",\n          content: {\n            title: `${el.title}`,\n            description: \"장소정보를 확인해보세요.\",\n            imageUrl: `${el.firstimage}`,\n            imageWidth: 400,\n            imageHeight: 300,\n            link: {\n              mobileWebUrl: `${process.env.REACT_APP_WEB_URL}/placedetail/${el.contentid}`,\n              webUrl: `${process.env.REACT_APP_WEB_URL}/placedetail/${el.contentid}`,\n            },\n          },\n          buttons: [\n            {\n              title: \"정보 보기\",\n              link: {\n                // 기본 도메인 설정값으로 가짐 (링크를 뭘 주던) 수정\n                mobileWebUrl: `${process.env.REACT_APP_WEB_URL}/placedetail/${el.contentid}`,\n                webUrl: `${process.env.REACT_APP_WEB_URL}/placedetail/${el.contentid}`,\n              },\n            },\n          ],\n        });\n      }\n    }\n  };\n\n  const checkedBorderEvent = (idx) => {\n    if (data?.isMember) {\n      return data?.insuranceInfo[idx].check\n        ? { borderStyle: \"solid\", borderColor: \"#25B1FA\", borderWidth: 9 }\n        : {};\n    } else {\n      return state?.check[idx]\n        ? { borderStyle: \"solid\", borderColor: \"#25B1FA\", borderWidth: 9 }\n        : {};\n    }\n  };\n  const checkedIconEvent = (idx) => {\n    if (data?.isMember) {\n      return { display: data?.insuranceInfo[idx].check ? \"flex\" : \"none\" };\n    } else {\n      return { display: state?.check[idx] ? \"flex\" : \"none\" };\n    }\n  };\n\n  const addrReplace = (place) => {\n    if (place !== undefined) {\n      const splitAddr = place.split(\" \");\n      const Addr = splitAddr.slice(0, 2).join(\" \");\n      return Addr;\n    }\n  };\n  return (\n    <Container>\n      {isLoading ? (\n        <LoadingBox>\n          <ClipLoader color=\"#25B1FA\" />\n        </LoadingBox>\n      ) : (\n        <>\n          <BalanceGameResultContainer>\n            <BalanceGameResultTextArea>\n              <BalanceGameResultText>{data?.title} 투표 결과</BalanceGameResultText>\n            </BalanceGameResultTextArea>\n            <BalanceGameResultImageContainer>\n              <BalanceGameResultImageArea>\n                <BalanceGameResultImage src={data?.insuranceInfo[0].insuranceImage} />\n                <RatioText style={checkedBorderEvent(0)}>\n                  {data?.insuranceInfo[0].percent}\n                </RatioText>\n                <BalanceGameWinnerCheckImage src={SelectCheck} style={checkedIconEvent(0)} />\n              </BalanceGameResultImageArea>\n\n              <BalanceGameResultImageArea>\n                <BalanceGameResultImage src={data?.insuranceInfo[1].insuranceImage} />\n                <RatioText style={checkedBorderEvent(1)}>\n                  {data?.insuranceInfo[1].percent}\n                </RatioText>\n                <BalanceGameWinnerCheckImage src={SelectCheck} style={checkedIconEvent(1)} />\n              </BalanceGameResultImageArea>\n            </BalanceGameResultImageContainer>\n            <BalanceItemNameContainer>\n              <BalanceGameItemNameArea>\n                <BalanceGameItemNameText>\n                  {data?.insuranceInfo[0].insuranceName}\n                </BalanceGameItemNameText>\n              </BalanceGameItemNameArea>\n              <BalanceGameItemNameArea>\n                <BalanceGameItemNameText>\n                  {data?.insuranceInfo[1].insuranceName}\n                </BalanceGameItemNameText>\n              </BalanceGameItemNameArea>\n            </BalanceItemNameContainer>\n            <GrayBorder style={{ marginTop: 18 }} />\n          </BalanceGameResultContainer>\n          <RecoBalanceGameContainer>\n            <RecoBalanceGameTitleNameArea>\n              <RecoBalanceGameTitleText>추천 밸런스 게임</RecoBalanceGameTitleText>\n            </RecoBalanceGameTitleNameArea>\n            <RecoBalanceGameListArea>\n              {data?.recommendInsuranceGame.map((el) => {\n                return (\n                  <RecoBalanceGameListContainer\n                    key={el.insuranceGameId}\n                    onClick={() => moveInsuranceGame(el.insuranceGameId)}\n                  >\n                    <RecoBalanceGameImageArea>\n                      <RecoBalanceGameLeftImage src={el.insuranceImage[0]} />\n                      <RecoBalanceGameRightImage src={el.insuranceImage[1]} />\n                    </RecoBalanceGameImageArea>\n                    <RecoBalanceGameNameArea>\n                      <RecoBalanceGameNameText>{el.title}</RecoBalanceGameNameText>\n                    </RecoBalanceGameNameArea>\n                  </RecoBalanceGameListContainer>\n                );\n              })}\n            </RecoBalanceGameListArea>\n          </RecoBalanceGameContainer>\n          <GrayBorder />\n          <DescriptionContainer>\n            <TipArea>\n              <TipIcon src={tipIcon} />\n              <TipTextArea>\n                <TipTitle>간단하게 알려드릴게요.</TipTitle>\n                <TipText>\n                  {data?.insuranceInfo[0].insuranceName} / {data?.insuranceInfo[1].insuranceName}\n                </TipText>\n              </TipTextArea>\n            </TipArea>\n            <DescriptionTextArea>\n              <DescriptionText>• {data?.insuranceInfo[0].description}</DescriptionText>\n              <DescriptionText>• {data?.insuranceInfo[1].description}</DescriptionText>\n            </DescriptionTextArea>\n          </DescriptionContainer>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default InsuranceGameSelectResult;\n\nconst Container = styled.div`\n  vertical-align: middle;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n`;\nconst BalanceGameResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst BalanceGameResultTextArea = styled.div`\n  margin-top: 16px;\n  display: flex;\n`;\nconst BalanceGameResultText = styled.span`\n  display: flex;\n  font-size: 16px;\n  font-weight: 600;\n  color: #000000;\n`;\nconst BalanceGameResultImageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 13px;\n  width: 354px;\n`;\nconst BalanceGameResultImageArea = styled.div`\n  width: 172px;\n  height: 172px;\n  flex-direction: column;\n  position: relative;\n`;\nconst BalanceGameResultImage = styled.img`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  border-radius: 7px;\n`;\nconst RatioText = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  font-size: 28px;\n  color: #ffffff;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 7px;\n`;\nconst BalanceGameWinnerCheckImage = styled.img`\n  display: flex;\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  right: 8px;\n  bottom: 8px;\n  z-index: 200;\n`;\nconst BalanceItemNameContainer = styled.div`\n  width: 354px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 22px;\n`;\nconst BalanceGameItemNameArea = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 172px;\n`;\nconst BalanceGameItemNameText = styled.span`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  color: #000000;\n`;\nconst GrayBorder = styled.div`\n  display: flex;\n  height: 4px;\n  width: 100%;\n  background-color: #d9d9d9;\n`;\nconst RecoBalanceGameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n  margin-left: 20px;\n`;\nconst RecoBalanceGameTitleNameArea = styled.div`\n  display: flex;\n  /* background-color: red; */\n`;\nconst RecoBalanceGameTitleText = styled.span`\n  display: flex;\n  font-weight: 600;\n  font-size: 16px;\n  color: #000000;\n`;\nconst RecoBalanceGameListArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  overflow-x: scroll;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  & {\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none; /* Firefox */\n  }\n  &::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera*/\n  }\n`;\nconst RecoBalanceGameListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 12px;\n  cursor: pointer;\n`;\nconst RecoBalanceGameImageArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 153px;\n  height: 76px;\n`;\nconst RecoBalanceGameLeftImage = styled.img`\n  display: flex;\n  width: 50%;\n  height: 100%;\n  border-bottom-left-radius: 8px;\n  border-top-left-radius: 8px;\n`;\nconst RecoBalanceGameRightImage = styled.img`\n  display: flex;\n  width: 50%;\n  height: 100%;\n  margin-left: 1px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 8px;\n`;\nconst RecoBalanceGameNameArea = styled.div`\n  display: flex;\n  margin-top: 8px;\n`;\nconst RecoBalanceGameNameText = styled.span`\n  display: flex;\n  font-weight: 500;\n  font-size: 14px;\n  color: #000000;\n`;\nconst LoadingBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n`;\nconst DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  padding: 23px 20px;\n`;\nconst TipArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  background-color: #fffcdd;\n  border-radius: 8px;\n  align-items: center;\n  margin-bottom: 28px;\n`;\nconst TipIcon = styled.img`\n  width: 86px;\n  height: 122px;\n  margin-left: 10px;\n`;\nconst TipTextArea = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding: 0px 20px;\n`;\nconst TipTitle = styled.p`\n  display: flex;\n  font-size: 16px;\n  font-weight: 500;\n  color: #000;\n  margin-bottom: 16px;\n`;\nconst TipText = styled.p`\n  display: flex;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n`;\nconst DescriptionTextArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\nconst DescriptionText = styled.p`\n  display: flex;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  line-height: 20px;\n`;\n"],"names":["FullButton","styled","button","_templateObject","_taggedTemplateLiteral","props","type","height","_ref","children","rest","_jsx","InsuranceGameSelectResult","navigate","useNavigate","state","useLocation","searchParams","setSearchParams","useSearchParams","userId","setUserId","useState","jwt","setJwt","rnSend","setRnSend","isApp","setIsApp","platform","setPlatform","data","setData","isLoading","setIsLoading","pathId","get","getData","async","reqJwt","axios","method","headers","Authorization","url","concat","process","guest_name","then","res","insuranceResult","catch","err","console","log","useEffect","_window$ReactNativeWe","window","ReactNativeWebView","postMessage","JSON","stringify","document","addEventListener","e","parseData","parse","loginData","id","focused","script","createElement","src","body","appendChild","removeChild","checkedBorderEvent","idx","isMember","insuranceInfo","check","borderStyle","borderColor","borderWidth","checkedIconEvent","display","Container","LoadingBox","ClipLoader","color","_jsxs","_Fragment","BalanceGameResultContainer","BalanceGameResultTextArea","BalanceGameResultText","title","BalanceGameResultImageContainer","BalanceGameResultImageArea","BalanceGameResultImage","insuranceImage","RatioText","style","percent","BalanceGameWinnerCheckImage","SelectCheck","BalanceItemNameContainer","BalanceGameItemNameArea","BalanceGameItemNameText","insuranceName","GrayBorder","marginTop","RecoBalanceGameContainer","RecoBalanceGameTitleNameArea","RecoBalanceGameTitleText","RecoBalanceGameListArea","recommendInsuranceGame","map","el","RecoBalanceGameListContainer","onClick","moveInsuranceGame","insuranceGameId","RecoBalanceGameImageArea","RecoBalanceGameLeftImage","RecoBalanceGameRightImage","RecoBalanceGameNameArea","RecoBalanceGameNameText","DescriptionContainer","TipArea","TipIcon","tipIcon","TipTextArea","TipTitle","TipText","DescriptionTextArea","DescriptionText","description","div","_templateObject2","_templateObject3","span","_templateObject4","_templateObject5","_templateObject6","img","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","_templateObject28","p","_templateObject29","_templateObject30","_templateObject31","_templateObject32"],"sourceRoot":""}