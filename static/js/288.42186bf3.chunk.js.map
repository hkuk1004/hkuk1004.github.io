{"version":3,"file":"static/js/288.42186bf3.chunk.js","mappings":"wRAOA,MAqIMA,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qJAQtBC,EAAeJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+KASzBG,EAAWN,EAAAA,GAAOO,KAAIC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,6GAOtBM,EAAeT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,uIAQzBQ,EAAgBX,EAAAA,GAAOY,IAAGC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,yIAS1BW,EAAUd,EAAAA,GAAOY,IAAGG,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,6IASpBa,EAAWhB,EAAAA,GAAOY,IAAGK,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,4GAOrBe,EAAclB,EAAAA,GAAOO,KAAIY,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,wIAQzBiB,EAAcpB,EAAAA,GAAOC,IAAGoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,2OAWxBmB,EAAWtB,EAAAA,GAAOC,IAAGsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,oGAMrBqB,EAAexB,EAAAA,GAAOO,KAAIkB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,6GAO1BuB,EAAU1B,EAAAA,GAAOO,KAAIoB,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,6GAOrByB,EAAe5B,EAAAA,GAAOO,KAAIsB,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,gHAO1B2B,EAAuB9B,EAAAA,GAAOC,IAAG8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,iGAMjC6B,EAAsBhC,EAAAA,GAAOC,IAAGgC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,qNAWhC+B,GAAkBlC,EAAAA,GAAOO,KAAI4B,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,6GAO7BiC,GAAmBpC,EAAAA,GAAOC,IAAGoC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,qHAO7BmC,GAAetC,EAAAA,GAAOO,KAAIgC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,6FAM1BqC,GAAcxC,EAAAA,GAAOO,KAAIkC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,wEAKzBuC,GAAsB1C,EAAAA,GAAOC,IAAG0C,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,yNAWhCyC,GAAa5C,EAAAA,GAAOC,IAAG4C,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,0HAMvB2C,GAAa9C,EAAAA,GAAOO,KAAIwC,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,gHAOxB6C,GAAgBhD,EAAAA,GAAOC,IAAGgD,IAAAA,GAAA9C,EAAAA,EAAAA,GAAA,0HAM1B+C,GAAYlD,EAAAA,GAAOO,KAAI4C,IAAAA,GAAAhD,EAAAA,EAAAA,GAAA,wHAOvBiD,GAAsBpD,EAAAA,GAAOO,KAAI8C,IAAAA,GAAAlD,EAAAA,EAAAA,GAAA,wHAOjCmD,GAAatD,EAAAA,GAAOC,IAAGsD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,kHAOvBqD,GAAkBxD,EAAAA,GAAOC,IAAGwD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,4BAG5BuD,GAAc1D,EAAAA,GAAOO,KAAIoD,IAAAA,GAAAxD,EAAAA,EAAAA,GAAA,6GAQ/B,GApVkByD,KAChB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,OACjCC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,CAAC,IACjCG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,IAC1CK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,KACxCO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,IACrCS,EAAQd,EAAae,IAAI,MAC/BC,QAAQC,IAAIH,IA4BZI,EAAAA,EAAAA,YAAU,KA3BMC,WACdf,GAAa,SAGPgB,EAAAA,EAAAA,GAAM,CACVC,OAAQ,MAIRC,IAAI,GAADC,OAAKC,qCAA6B,gBAAAD,OAAeT,KAEnDW,MAAMC,IACLV,QAAQC,IAAIS,EAAIC,MACZD,EAAIC,KAAKC,SACXrB,EAAWmB,EAAIC,KAAKE,WACpBpB,EAAgBiB,EAAIC,KAAKG,eACzBnB,EAAee,EAAIC,KAAKI,UACxBC,EAAkBN,EAAIC,KAAKE,UAAUI,WACrC7B,GAAa,GACf,IAED8B,OAAOC,IACNnB,QAAQC,IAAIkB,GACZC,MAAM,yGACNhC,GAAa,EAAM,GACnB,EAGJiC,EAAS,GACR,IAEH,MAAML,EAAqBM,IACzBtB,QAAQC,IAAIqB,GACZ,MAAMC,EAAe,IAAIC,KAAKF,GACxBG,EAAOF,EAAaG,cACpBC,GAASJ,EAAaK,WAAa,GAAGC,WAAWC,SAAS,EAAG,KAC7DC,EAAMR,EAAaS,UAAUH,WAAWC,SAAS,EAAG,KACpDG,EAAa,GAAA1B,OAAMkB,EAAI,KAAAlB,OAAIoB,EAAK,KAAApB,OAAIwB,GAC1ClC,EAAaoC,EAAc,EAE7B,OACEC,EAAAA,EAAAA,KAAChH,EAAS,CAAAiH,SACPhD,GACC+C,EAAAA,EAAAA,KAACzD,GAAU,CAAA0D,UACTD,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CAACC,MAAM,eAGpBC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAJ,SAAA,EACEG,EAAAA,EAAAA,MAACjG,EAAW,CAAA8F,SAAA,CAAC,wBAAO7C,EAAQkD,eAC5BF,EAAAA,EAAAA,MAAC1G,EAAY,CAAC6G,cAAgBC,GAAMA,EAAEC,iBAAiBR,SAAA,EACrDD,EAAAA,EAAAA,KAAC/F,EAAQ,CAACyG,IAAKtD,EAAQuD,aACvBX,EAAAA,EAAAA,KAACpG,EAAa,CAAC8G,IAAKE,EAAQ,UAC5BZ,EAAAA,EAAAA,KAACjG,EAAO,CAAC2G,IAAKE,EAAQ,aAExBZ,EAAAA,EAAAA,KAAC3G,EAAY,CAAA4G,UACXD,EAAAA,EAAAA,KAACzG,EAAQ,CAAA0G,SAAE7C,EAAQyD,WAErBb,EAAAA,EAAAA,KAACvD,GAAe,CAAAwD,UACdD,EAAAA,EAAAA,KAACrD,GAAW,CAAAsD,SACT7C,EAAQ0D,UAEHd,EAAAA,EAAAA,KAACrD,GAAW,CAAAsD,SACT7C,EAAQ0D,YAIXd,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,SAKVL,EAAAA,EAAAA,KAAC3F,EAAW,CAAA4F,UACVG,EAAAA,EAAAA,MAAC7F,EAAQ,CAAA0F,SAAA,EACPD,EAAAA,EAAAA,KAACvF,EAAY,CAAAwF,SAAC,8BACdD,EAAAA,EAAAA,KAACrF,EAAO,CAAAsF,SAAE7C,EAAQ2D,mBAGtBX,EAAAA,EAAAA,MAAC/F,EAAW,CAAA4F,SAAA,EACVG,EAAAA,EAAAA,MAAC7F,EAAQ,CAAA0F,SAAA,EACPD,EAAAA,EAAAA,KAACvF,EAAY,CAAAwF,SAAC,qCACdD,EAAAA,EAAAA,KAACrF,EAAO,CAAAsF,SAAE7C,EAAQ4D,eAEpBhB,EAAAA,EAAAA,KAAC/E,EAAmB,CAAC,kBAAgB,aAAYgF,UAC/CD,EAAAA,EAAAA,KAAC7E,GAAe,CAAA8E,SAAC,SAEnBD,EAAAA,EAAAA,KAACiB,EAAAA,GAAO,CAACC,GAAG,aAAaC,OAAO,oBAAoBC,MAAO,CAAEC,gBAAiB,QAASpB,UACrFG,EAAAA,EAAAA,MAAC/E,GAAgB,CAAA4E,SAAA,EACfD,EAAAA,EAAAA,KAACzE,GAAY,CAAA0E,SAAC,qCACdD,EAAAA,EAAAA,KAACvE,GAAW,CAAAwE,SAAC,2DACbD,EAAAA,EAAAA,KAACvE,GAAW,CAAAwE,SAAC,0FAKnBD,EAAAA,EAAAA,KAAC3F,EAAW,CAAA4F,UACVG,EAAAA,EAAAA,MAAC7F,EAAQ,CAAA0F,SAAA,EACPD,EAAAA,EAAAA,KAACvF,EAAY,CAAAwF,SAAC,oCACdD,EAAAA,EAAAA,KAACrF,EAAO,CAAAsF,SAAEvC,UAGd0C,EAAAA,EAAAA,MAACrF,EAAoB,CAAAkF,SAAA,EACnBD,EAAAA,EAAAA,KAACvF,EAAY,CAAAwF,SAAC,oCACdG,EAAAA,EAAAA,MAACvF,EAAY,CAAAoF,SAAA,CAAE3C,EAAa,eAE7BE,EAAY8D,KAAI,CAACC,EAAIC,KAElBpB,EAAAA,EAAAA,MAACzE,GAAmB,CAAAsE,SAAA,EAClBG,EAAAA,EAAAA,MAACvE,GAAU,CAAAoE,SAAA,EACTD,EAAAA,EAAAA,KAACjE,GAAU,CAAAkE,SAAC,uEACZD,EAAAA,EAAAA,KAACjE,GAAU,CAAAkE,SAAC,0EAEdG,EAAAA,EAAAA,MAACnE,GAAa,CAAAgE,SAAA,EACZD,EAAAA,EAAAA,KAAC7D,GAAS,CAAA8D,SAAC,iBACXD,EAAAA,EAAAA,KAAC3D,GAAmB,CAAA4D,SAAC,2BAOvB,C","sources":["routes/DetailNFT.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, useLocation, useSearchParams } from \"react-router-dom\";\nimport { styled } from \"styled-components\";\nimport { Tooltip } from \"react-tooltip\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst DetailNFT = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false); //true로 바꿀것\n  const [NFTData, setNFTData] = useState({});\n  const [NFTSaleCount, setNFTSaleCount] = useState(0);\n  const [NFTSaleList, setNFTSaleList] = useState([]);\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const NFTId = searchParams.get(\"id\");\n  console.log(NFTId);\n  const getData = async () => {\n    setIsLoading(true);\n    // const userData = await AsyncStorage.getItem(\"loginData\");\n    // const loginData = await JSON.parse(userData);\n    await axios({\n      method: \"get\",\n      // headers: {\n      //   Authorization: loginData?.jwt,\n      // },\n      url: `${process.env.REACT_APP_API_URL}/nft/NFT?id=${NFTId}`,\n    })\n      .then((res) => {\n        console.log(res.data);\n        if (res.data.isPass) {\n          setNFTData(res.data.nftDetail);\n          setNFTSaleCount(res.data.nftSalesCount);\n          setNFTSaleList(res.data.nftSales);\n          convertDateFormat(res.data.nftDetail.create_at);\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"일시적으로 정보를 불러올 수 없습니다.\");\n        setIsLoading(false);\n      });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const convertDateFormat = (date) => {\n    console.log(date);\n    const originalDate = new Date(date);\n    const year = originalDate.getFullYear();\n    const month = (originalDate.getMonth() + 1).toString().padStart(2, \"0\");\n    const day = originalDate.getDate().toString().padStart(2, \"0\");\n    const newDateFormat = `${year}-${month}-${day}`;\n    setCreatedAt(newDateFormat);\n  };\n  return (\n    <Container>\n      {isLoading ? (\n        <LoadingBox>\n          <ClipLoader color=\"#25B1FA\" />\n        </LoadingBox>\n      ) : (\n        <>\n          <CreatorText>생성자 : {NFTData.maker_name}</CreatorText>\n          <NFTImageArea onContextMenu={(e) => e.preventDefault()}>\n            <NFTImage src={NFTData.image_url} />\n            <DatachainLogo src={require(\"../assets/image/datachainLogo.png\")} />\n            <NFTLogo src={require(\"../assets/image/NFTLogo.png\")} />\n          </NFTImageArea>\n          <NFTTitleArea>\n            <NFTTitle>{NFTData.title}</NFTTitle>\n          </NFTTitleArea>\n          <NFTDescTextArea>\n            <NFTDescText>\n              {NFTData.nft_text ? \n                  (\n                    <NFTDescText>\n                      {NFTData.nft_text}\n                    </NFTDescText>\n                  ) :\n                  (\n                    <></>\n                  )\n              }\n            </NFTDescText>\n          </NFTDescTextArea>\n          <NFTInfoArea>\n            <TextArea>\n              <NFTInfoTitle>소유자 :&nbsp;</NFTInfoTitle>\n              <NFTInfo>{NFTData.owner_name}</NFTInfo>\n            </TextArea>\n          </NFTInfoArea>\n          <NFTInfoArea>\n            <TextArea>\n              <NFTInfoTitle>고유 번호 :&nbsp;</NFTInfoTitle>\n              <NFTInfo>{NFTData.token_id}</NFTInfo>\n            </TextArea>\n            <DescriptionIconArea data-tooltip-id=\"my-tooltip\">\n              <DescriptionIcon>?</DescriptionIcon>\n            </DescriptionIconArea>\n            <Tooltip id=\"my-tooltip\" border=\"1px solid #d9d9d9\" style={{ backgroundColor: \"#fff\" }}>\n              <ToolTipContainer>\n                <ToolTipTitle>고유번호란?</ToolTipTitle>\n                <ToolTipInfo>블록체인 내에서 NFT를</ToolTipInfo>\n                <ToolTipInfo>식별하기 위한 고유 값입니다.</ToolTipInfo>\n              </ToolTipContainer>\n            </Tooltip>\n            {/* </Tooltip> */}\n          </NFTInfoArea>\n          <NFTInfoArea>\n            <TextArea>\n              <NFTInfoTitle>생성시간 :&nbsp;</NFTInfoTitle>\n              <NFTInfo>{createdAt}</NFTInfo>\n            </TextArea>\n          </NFTInfoArea>\n          <TransactionTitleArea>\n            <NFTInfoTitle>거래내역 :&nbsp;</NFTInfoTitle>\n            <NFTInfoCount>{NFTSaleCount}건</NFTInfoCount>\n          </TransactionTitleArea>\n          {NFTSaleList.map((el, idx) => {\n            return (\n              <TransactionListArea>\n                <WalletArea>\n                  <WalletText>소유자 : %ID% 혹은 %지갑주소%</WalletText>\n                  <WalletText>구매자 : %ID% 혹은 %지갑주소%</WalletText>\n                </WalletArea>\n                <PriceDateArea>\n                  <PriceText>1,000원</PriceText>\n                  <TransactionDateText>2024-01-08</TransactionDateText>\n                </PriceDateArea>\n              </TransactionListArea>\n            );\n          })}\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 14px 20px 50px 20px;\n`;\nconst NFTTitleArea = styled.div`\n  width: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 14px;\n  display: flex;\n  flex-direction: row;\n`;\nconst NFTTitle = styled.span`\n  font-size: 16px;\n  font-weight: 700;\n  color: #000;\n  display: flex;\n  flex-direction: row;\n`;\nconst NFTImageArea = styled.div`\n  width: 100%;\n  aspect-ratio: 1;\n  margin-bottom: 12px;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n`;\nconst DatachainLogo = styled.img`\n  width: 68px;\n  height: 20px;\n  position: absolute;\n  top: 16px;\n  left: 16px;\n  display: flex;\n  flex-direction: row;\n`;\nconst NFTLogo = styled.img`\n  width: 41px;\n  height: 45px;\n  position: absolute;\n  bottom: 16px;\n  right: 16px;\n  display: flex;\n  flex-direction: row;\n`;\nconst NFTImage = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: row;\n`;\nconst CreatorText = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  color: #25b1fa;\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: row;\n`;\nconst NFTInfoArea = styled.div`\n  width: 100%;\n  padding: 14px 0px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom-width: 1px;\n  border-bottom-color: #d9d9d9;\n  display: flex;\n  flex-direction: row;\n`;\nconst TextArea = styled.div`\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`;\nconst NFTInfoTitle = styled.span`\n  font-size: 16px;\n  font-weight: 700;\n  color: #000;\n  display: flex;\n  flex-direction: row;\n`;\nconst NFTInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: #000;\n  display: flex;\n  flex-direction: row;\n`;\nconst NFTInfoCount = styled.span`\n  font-size: 16px;\n  font-weight: 700;\n  color: #25b1fa;\n  display: flex;\n  flex-direction: row;\n`;\nconst TransactionTitleArea = styled.div`\n  flex-direction: row;\n  margin-top: 22px;\n  display: flex;\n  flex-direction: row;\n`;\nconst DescriptionIconArea = styled.div`\n  width: 21px;\n  height: 21px;\n  border-radius: 15.5px;\n  background-color: #25b1fa;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  flex-direction: row;\n  cursor: pointer;\n`;\nconst DescriptionIcon = styled.span`\n  font-size: 12px;\n  font-weight: 700;\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n`;\nconst ToolTipContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 190px;\n  height: 80px;\n  justify-content: center;\n`;\nconst ToolTipTitle = styled.span`\n  font-size: 16px;\n  font-weight: 700;\n  color: #25b1fa;\n  margin-bottom: 9px;\n`;\nconst ToolTipInfo = styled.span`\n  font-size: 16px;\n  font-weight: 400;\n  color: #716e6eb2;\n`;\nconst TransactionListArea = styled.div`\n  width: 100%;\n  height: 72px;\n  flex-direction: row;\n  justify-content: space-between;\n  border: 1px solid #d9d9d9;\n  border-radius: 8px;\n  margin-top: 12px;\n  padding: 10px 12px;\n  display: flex;\n`;\nconst WalletArea = styled.div`\n  flex-direction: column;\n  justify-content: space-between;\n  display: flex;\n  /* background-color: red; */\n`;\nconst WalletText = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n  color: #787878;\n  display: flex;\n  flex-direction: row;\n`;\nconst PriceDateArea = styled.div`\n  flex-direction: column;\n  justify-content: space-between;\n  display: flex;\n  /* background-color: red; */\n`;\nconst PriceText = styled.span`\n  font-size: 20px;\n  font-weight: 400;\n  color: #737373;\n  display: flex;\n  flex-direction: row-reverse;\n`;\nconst TransactionDateText = styled.span`\n  font-size: 12px;\n  font-weight: 400;\n  color: #737373;\n  display: flex;\n  flex-direction: row-reverse;\n`;\nconst LoadingBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n`;\nconst NFTDescTextArea = styled.div`\n  display: flex;\n`;\nconst NFTDescText = styled.span`\n  display: flex;\n  color: #000;\n  font-weight: 500;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport default DetailNFT;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","NFTTitleArea","_templateObject2","NFTTitle","span","_templateObject3","NFTImageArea","_templateObject4","DatachainLogo","img","_templateObject5","NFTLogo","_templateObject6","NFTImage","_templateObject7","CreatorText","_templateObject8","NFTInfoArea","_templateObject9","TextArea","_templateObject10","NFTInfoTitle","_templateObject11","NFTInfo","_templateObject12","NFTInfoCount","_templateObject13","TransactionTitleArea","_templateObject14","DescriptionIconArea","_templateObject15","DescriptionIcon","_templateObject16","ToolTipContainer","_templateObject17","ToolTipTitle","_templateObject18","ToolTipInfo","_templateObject19","TransactionListArea","_templateObject20","WalletArea","_templateObject21","WalletText","_templateObject22","PriceDateArea","_templateObject23","PriceText","_templateObject24","TransactionDateText","_templateObject25","LoadingBox","_templateObject26","NFTDescTextArea","_templateObject27","NFTDescText","_templateObject28","DetailNFT","searchParams","setSearchParams","useSearchParams","isLoading","setIsLoading","useState","NFTData","setNFTData","NFTSaleCount","setNFTSaleCount","NFTSaleList","setNFTSaleList","createdAt","setCreatedAt","NFTId","get","console","log","useEffect","async","axios","method","url","concat","process","then","res","data","isPass","nftDetail","nftSalesCount","nftSales","convertDateFormat","create_at","catch","err","alert","getData","date","originalDate","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","newDateFormat","_jsx","children","ClipLoader","color","_jsxs","_Fragment","maker_name","onContextMenu","e","preventDefault","src","image_url","require","title","nft_text","owner_name","token_id","Tooltip","id","border","style","backgroundColor","map","el","idx"],"sourceRoot":""}