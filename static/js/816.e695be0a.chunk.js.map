{"version":3,"file":"static/js/816.e695be0a.chunk.js","mappings":"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","sources":["routes/New.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport cate from \"../data/category.json\";\r\n\r\nconst serviceKey =\r\n\"eRLOwH19Z%2FYOTC00zcefvpxvwseGUrgSsocmGQ0SiDLenLDTZtVZRYaMYwScpSNCHiQBLDrbYbFFDkyqu%2FdjcQ%3D%3D\";\r\nconst baseUrl = \"https://apis.data.go.kr/B551011/KorService1\";\r\nconst pageNo = 1;\r\nconst numOfRows = 20000\r\n\r\nconst firstArray = [\r\n  {\r\n    QNum: 1,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 2,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 3,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 4,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 5,\r\n    AnsIdx: 1,\r\n  },\r\n  {\r\n    QNum: 6,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 7,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 8,\r\n    AnsIdx: 0,\r\n  },\r\n  {\r\n    QNum: 9,\r\n    AnsIdx: 0,\r\n  },\r\n];\r\n\r\nconst secondArray = Object.values(cate);\r\n\r\n\r\nconst randomNumber = (arr) => {\r\n  return Math.floor(Math.random() * (arr.length));\r\n};\r\n\r\nconst sortedAnsList = (totalAns) =>{\r\n  const newArray = [];\r\n  for (const firstItem of totalAns) {\r\n    for (const secondItem of secondArray) {\r\n      if (firstItem.QNum === secondItem.QNum) {\r\n        const randomIdx= randomNumber(secondItem.AnsList[firstItem.AnsIdx])\r\n\r\n        newArray.push({\r\n          QNum: firstItem.QNum,\r\n          Ans: secondItem.AnsList[firstItem.AnsIdx][randomIdx],\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return newArray\r\n\r\n}\r\n\r\nconst getURL = ({contentTypeId,cat1,cat2,cat3}) => {\r\n  let url;\r\n\r\nif (cat1.length === 3 && cat2.length === 5 && cat3.length === 9) {\r\n  url = `${baseUrl}/areaBasedList1?serviceKey=${serviceKey}&pageNo=${pageNo}&numOfRows=${numOfRows}&MobileApp=AppTest&MobileOS=ETC&arrange=A&contentTypeId=${contentTypeId}&cat1=${cat1}&cat2=${cat2}&cat3=${cat3}&_type=json`;\r\n} else if (cat1.length === 3 && cat2.length === 5 && cat3.length !== 9) {\r\n  url = `${baseUrl}/areaBasedList1?serviceKey=${serviceKey}&pageNo=${pageNo}&numOfRows=${numOfRows}&MobileApp=AppTest&MobileOS=ETC&arrange=A&contentTypeId=${contentTypeId}&cat1=${cat1}&cat2=${cat2}&_type=json`;\r\n} else if (cat1.length === 3 && cat2.length !== 5 && cat3.length !== 9) {\r\n  console.log(1);\r\n  url = `${baseUrl}/areaBasedList1?serviceKey=${serviceKey}&pageNo=${pageNo}&numOfRows=${numOfRows}&MobileApp=AppTest&MobileOS=ETC&arrange=A&contentTypeId=${contentTypeId}&cat1=${cat1}&_type=json`;\r\n} else if (cat1.length !== 3 && cat2.length !== 5 && cat3.length !== 9) {\r\n  console.log(3);\r\n  url = `${baseUrl}/areaBasedList1?serviceKey=${serviceKey}&pageNo=${pageNo}&numOfRows=${numOfRows}&MobileApp=AppTest&MobileOS=ETC&arrange=A&contentTypeId=${contentTypeId}&_type=json`;\r\n}\r\n\r\nreturn url\r\n};\r\n\r\nconst forURL = sortedAnsList(firstArray)\r\n\r\nconst testUrl = getURL(forURL[1].Ans)\r\n\r\n// console.log(getURL(forURL[0].Ans));\r\n\r\nconst makeRandom = (itemArr) => {\r\n  const randomIdx = randomNumber(itemArr)\r\n\r\n  const tempSpot = itemArr[randomIdx];\r\n\r\n  if (tempSpot.firstimage.length === 0) {\r\n    makeRandom(itemArr);\r\n  } else {\r\n    return tempSpot\r\n  }\r\n};\r\n\r\nconst getRandomSpot = async (url) => {\r\n  try {\r\n    const res = await axios.get(url);\r\n    const itemList = res.data.response.body.items.item;\r\n    const result = makeRandom(itemList);\r\n    return result;\r\n  } catch (err) {\r\n    console.log(\"에러\", err);\r\n    // throw err; \r\n  }\r\n};\r\n\r\nconst resultOne = await getRandomSpot(testUrl)\r\nconsole.log(resultOne)\r\n\r\n\r\n\r\n\r\n// firstArray[0].AnsIdx\r\n\r\n// console.log(sortedAnsList(firstArray));\r\n\r\n\r\nconst New = () => {\r\n\r\n\r\n\r\n\r\n\r\n  // // 새로운 배열 생성\r\n  // const newArray = [];\r\n  // for (const firstItem of firstArray) {\r\n  //   for (const secondItem of secondArray) {\r\n  //     if (firstItem.QNum === secondItem.QNum) {\r\n  //       const randomIdx= randomNumber(secondItem.AnsList[firstItem.AnsIdx])\r\n\r\n  //       newArray.push({\r\n  //         QNum: firstItem.QNum,\r\n  //         Ans: secondItem.AnsList[firstItem.AnsIdx][randomIdx],\r\n  //       });\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // console.log(newArray);\r\n  // console.log(getURL(newArray[0].Ans))\r\n\r\n\r\n  return <div>New</div>;\r\n};\r\n\r\nexport default New;\r\n"],"names":["serviceKey","baseUrl","numOfRows","secondArray","Object","values","cate","randomNumber","arr","Math","floor","random","length","testUrl","_ref","url","contentTypeId","cat1","cat2","cat3","concat","console","log","getURL","totalAns","_step","newArray","_iterator","_createForOfIteratorHelper","s","n","done","firstItem","value","_i","_secondArray","secondItem","QNum","randomIdx","AnsList","AnsIdx","push","Ans","err","e","f","sortedAnsList","makeRandom","itemArr","tempSpot","firstimage","getRandomSpot","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","itemList","result","wrap","_context","prev","next","axios","get","sent","data","response","body","items","item","abrupt","t0","stop","_x","apply","arguments","resultOne","_jsx","children"],"sourceRoot":""}