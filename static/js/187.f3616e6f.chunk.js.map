{"version":3,"file":"static/js/187.f3616e6f.chunk.js","mappings":"0hBAiEA,MAAMA,GAAa,CACjBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,E,6ylTAykBIC,GAAmBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gGAM7BC,GAAgBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4JAQ1BG,GAAiBN,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kKAQ3BK,GAAkBR,EAAAA,GAAOC,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4EAK5BO,GAAcV,EAAAA,GAAOW,IAAGC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yFAMxBU,GAAWb,EAAAA,GAAOc,KAAIC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,wFAMtBa,GAAYhB,EAAAA,GAAOC,IAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,4EAKtBe,GAAgBlB,EAAAA,GAAOC,IAAGkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,mGAM1BiB,GAAWpB,EAAAA,GAAOW,IAAGU,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,iEAKrBmB,GAAgBtB,EAAAA,GAAOc,KAAIS,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,qFAM3BqB,GAAgBxB,EAAAA,GAAOC,IAAGwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,4EAK1BuB,GAAW1B,EAAAA,GAAOW,IAAGgB,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,iEAKrByB,GAAgB5B,EAAAA,GAAOc,KAAIe,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,qFAM3B2B,GAAgB9B,EAAAA,GAAOC,IAAG8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,kHAO1B6B,GAAmBhC,EAAAA,GAAOC,IAAGgC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,iGAM7B+B,GAAoBlC,EAAAA,GAAOc,KAAIqB,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,yFAM/BiC,GAAmBpC,EAAAA,GAAOc,KAAIuB,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,sEAK9BmC,GAAatC,EAAAA,GAAOC,IAAGsC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,qIAQvBqC,GAAYxC,EAAAA,GAAOC,IAAGwC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,6LAWtBuC,GAAY1C,EAAAA,GAAOC,IAAG0C,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,wEAKtByC,GAAiB5C,EAAAA,GAAOC,IAAG4C,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,gGAM3B2C,GAA2B9C,EAAAA,GAAOC,IAAG8C,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,oHAMrC6C,GAAwBhD,EAAAA,GAAOC,IAAGgD,IAAAA,GAAA9C,EAAAA,EAAAA,GAAA,+EAKlC+C,GAAelD,EAAAA,GAAOC,IAAGkD,IAAAA,GAAAhD,EAAAA,EAAAA,GAAA,2FAMzBiD,GAAmBpD,EAAAA,GAAOC,IAAGoD,IAAAA,GAAAlD,EAAAA,EAAAA,GAAA,gGAM7BmD,GAAUtD,EAAAA,GAAOW,IAAG4C,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,uHAOpBqD,GAAaxD,EAAAA,GAAOC,IAAGwD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,0IAOvBuD,GAAU1D,EAAAA,GAAOC,IAAG0D,IAAAA,GAAAxD,EAAAA,EAAAA,GAAA,mKASpByD,GAAa5D,EAAAA,GAAOC,IAAG4D,KAAAA,IAAA1D,EAAAA,EAAAA,GAAA,sKASvB2D,GAAS9D,EAAAA,GAAOC,IAAG8D,KAAAA,IAAA5D,EAAAA,EAAAA,GAAA,+IAQnB6D,GAAmBhE,EAAAA,GAAOC,IAAGgE,KAAAA,IAAA9D,EAAAA,EAAAA,GAAA,4GAO7B+D,GAAelE,EAAAA,GAAOC,IAAGkE,KAAAA,IAAAhE,EAAAA,EAAAA,GAAA,gIAQzBiE,GAAcpE,EAAAA,GAAOC,IAAGoE,KAAAA,IAAAlE,EAAAA,EAAAA,GAAA,sOAYxBmE,GAAetE,EAAAA,GAAOc,KAAIyD,KAAAA,IAAApE,EAAAA,EAAAA,GAAA,wFAM1BqE,GAAuBxE,EAAAA,GAAOC,IAAGwE,KAAAA,IAAAtE,EAAAA,EAAAA,GAAA,iNAgBjCuE,IALiB1E,EAAAA,GAAOc,KAAI6D,KAAAA,IAAAxE,EAAAA,EAAAA,GAAA,mEAKRH,EAAAA,GAAOc,KAAI8D,KAAAA,IAAAzE,EAAAA,EAAAA,GAAA,oEAK/B0E,GAAqB7E,EAAAA,GAAOC,IAAG6E,KAAAA,IAAA3E,EAAAA,EAAAA,GAAA,wFAM/B4E,GAAa/E,EAAAA,GAAOC,IAAG+E,KAAAA,IAAA7E,EAAAA,EAAAA,GAAA,kHAOvB8E,GAAejF,EAAAA,GAAOC,IAAGiF,KAAAA,IAAA/E,EAAAA,EAAAA,GAAA,iEAKzBgF,GAAuBnF,EAAAA,GAAOC,IAAGmF,KAAAA,IAAAjF,EAAAA,EAAAA,GAAA,qMAWjCkF,GAAoBrF,EAAAA,GAAOC,IAAGqF,KAAAA,IAAAnF,EAAAA,EAAAA,GAAA,uHAO9BoF,GAAsBvF,EAAAA,GAAOC,IAAGuF,KAAAA,IAAArF,EAAAA,EAAAA,GAAA,+EAKhCsF,GAAUzF,EAAAA,GAAO0F,EAACC,KAAAA,IAAAxF,EAAAA,EAAAA,GAAA,6EAKlByF,GAAc5F,EAAAA,GAAO6F,OAAMC,KAAAA,IAAA3F,EAAAA,EAAAA,GAAA,8IASjC,GA70BqB4F,MACFC,EAAAA,EAAAA,MAAjB,MACM,MAAEC,IAAUC,EAAAA,EAAAA,OACXC,EAAcC,IAAmBC,EAAAA,EAAAA,OACjCC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,IAC5CK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,KAChCO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,KACpCS,EAASC,IAAcV,EAAAA,EAAAA,UAAS,KAChCW,EAAcC,IAAmBZ,EAAAA,EAAAA,UAAS,KAC1Ca,EAAQC,IAAad,EAAAA,EAAAA,UAAS,KAC9Be,EAASC,IAAchB,EAAAA,EAAAA,UAAS,KAChCiB,EAAOC,IAAYlB,EAAAA,EAAAA,UAAS,KAC5BmB,EAAOC,IAAYpB,EAAAA,EAAAA,UAAS,KAC5BqB,EAAWC,IAAgBtB,EAAAA,EAAAA,UAAS,KACpCuB,EAAOC,IAAYxB,EAAAA,EAAAA,UAAS,KAC5ByB,EAAWC,IAAgB1B,EAAAA,EAAAA,UAAS,KACpC2B,EAAUC,IAAe5B,EAAAA,EAAAA,UAAS,KAClC6B,EAAYC,IAAiB9B,EAAAA,EAAAA,WAAS,IACtC+B,EAASC,IAAchC,EAAAA,EAAAA,WAAS,IAChCiC,EAAcC,IAAmBlC,EAAAA,EAAAA,UAAS,KAC1CmC,EAAeC,IAAoBpC,EAAAA,EAAAA,UAAS,CAAC,IAC7CqC,EAAeC,IAAoBtC,EAAAA,EAAAA,UAAS,IAC5CuC,GAAcC,KAAmBxC,EAAAA,EAAAA,UAAS,IAC3C,MAAEyC,IAAUC,QACXC,GAAKC,KAAU5C,EAAAA,EAAAA,UAAS,KACxB6C,GAAWC,KAAgB9C,EAAAA,EAAAA,UAAS,KACpC+C,GAAWC,KAAgBhD,EAAAA,EAAAA,UAAS,OACpCiD,GAAeC,KAAoBlD,EAAAA,EAAAA,UAAS,KAK5CmD,GAAQC,MAHCC,EAAAA,EAAAA,QAAO,KAGKrD,EAAAA,EAAAA,UAAS,QAC9BsD,GAAKC,KAAUvD,EAAAA,EAAAA,UAAS,KAExBwD,GAAOC,KAAYzD,EAAAA,EAAAA,UAAS,OAC5B0D,GAAUC,KAAe3D,EAAAA,EAAAA,UAAS,MAEnC4D,GAAajE,EAAakE,IAAI,UAE7BC,GAAQC,KAAa/D,EAAAA,EAAAA,UAAS,CAAC,IAE/BgE,GAAgBC,KAAqBjE,EAAAA,EAAAA,WAAS,IAIrDkE,EAAAA,EAAAA,YAAU,KACgBC,iBAChBC,EAAAA,EAAAA,GAAM,CACVC,OAAQ,OACRC,IAAI,GAADC,OAAKC,qCAA6B,0BAIrCC,KAAM,CAEJb,WAAYA,MAGbc,MAAMC,IAEL,GADAC,QAAQC,IAAIF,EAAIF,KAAM,gBAClBE,EAAIF,KAAKK,QAAS,CAAC,IAADC,EACpBhF,EAAY4E,EAAIF,KAAKO,UACrB9B,GAAiByB,EAAIF,KAAKQ,SAC1B/E,EAAeyE,EAAIF,KAAKS,SAASC,MACjC/E,EAAiBuE,EAAIF,KAAKS,SAASE,aACnC9E,EAAWqE,EAAIF,KAAKY,aACpB7E,EAAamE,EAAIF,KAAKS,SAAS3E,WAC/BG,EAAWiE,EAAIF,KAAKS,SAASzE,SAC7BG,EAAgB+D,EAAIF,KAAKa,aACzBxE,EAAU6D,EAAIF,KAAKS,SAASrE,QAC5BG,EAAW2D,EAAIF,KAAKS,SAASnE,SAC7BG,EAASyD,EAAIF,KAAKS,SAASjE,OAC3BG,EAASuD,EAAIF,KAAKS,SAAS/D,OAC3BK,EAASmD,EAAIF,KAAKS,SAAS3D,OAC3BG,EAAaiD,EAAIF,KAAKS,SAASzD,WAC/BH,EAAaqD,EAAIF,KAAKS,SAAS7D,WAC/B,MAAMkE,EAAQ,GACRC,EAAU,IAAIC,KAAKd,EAAIF,KAAKS,SAAS3E,WAC3C,KAAOiF,GAAW,IAAIC,KAAKd,EAAIF,KAAKS,SAASzE,UAC3C8E,EAAMG,KAAKF,EAAQG,cAAcC,MAAM,KAAK,IAC5CJ,EAAQK,QAAQL,EAAQM,UAAY,GAEtClE,EAAY2D,GACZvC,GAAa2B,EAAIF,KAAK1B,WACtB,MAAMgD,EAAqBC,GAAmBrB,EAAIF,KAAK1B,WACvDb,EAAgB6D,GA8N1B,SAAyBtB,GACvB,MAAMwB,EAAc,CAAC,EACjB,OAAJxB,QAAI,IAAJA,GAAAA,EAAMyB,SAASC,IACb,MAAMC,EAAOD,EAAKC,KAEbH,EAAYG,KACfH,EAAYG,GAAQ,IAGtBH,EAAYG,GAAMV,KAAKS,EAAK,IAE9B/D,EAAiB6D,EACnB,CAzOUI,CAAgBN,GAIS,QAAzBhB,EAAArC,OAAO4D,0BAAkB,IAAAvB,GAAzBA,EAA2BwB,YACzBC,KAAKC,UAAU,CACbC,OAAO,EACPC,OAAQhC,EAAIF,KAAKS,SAAS/B,OAC1BS,WAAYA,GACZzC,MAAOwD,EAAIF,KAAKS,SAAS/D,MACzBrB,SAAU6E,EAAIF,KAAKO,SACnB3D,UAAWsD,EAAIF,KAAKS,SAAS7D,aAGjCW,GAAW,EACb,KAED4E,OAAOC,IACNjC,QAAQC,IAAIgC,EAAI,GAChB,EAENC,GAEAC,SAASC,iBAAiB,WAAYC,IACpC,IACE,MAAMC,EAAYV,KAAKW,MAAMF,EAAExC,MAC3ByC,EAAUE,YACZhE,GAAU8D,EAAUE,UAAUC,IAC9B9D,GAAO2D,EAAUE,UAAU9D,MAG7BG,GAASyD,EAAU1D,OACnBG,GAAYuD,EAAUxD,SAIxB,CAAE,MAAOmD,GACPjC,QAAQC,IAAIgC,EACd,KAGFnE,OAAOsE,iBAAiB,WAAYC,IAClC,IACE,MAAMC,EAAYV,KAAKW,MAAMF,EAAExC,MAC3ByC,EAAUE,YACZhE,GAAU8D,EAAUE,UAAUC,IAC9B9D,GAAO2D,EAAUE,UAAU9D,MAG7BG,GAASyD,EAAU1D,OACnBG,GAAYuD,EAAUxD,SAIxB,CAAE,MAAOmD,GACPjC,QAAQC,IAAIgC,EACd,IACA,GACD,KAEH3C,EAAAA,EAAAA,YAAU,KACR,GAAInB,GAAW,CACb6B,QAAQC,IAAI9B,IACZ,MAAMJ,EAAM,IAAIF,GAAM6E,KAAKC,IAAI,MAAO,CACpCC,OAAQ,IAAI/E,GAAM6E,KAAKG,OACrB1E,GAAU,GAAG2E,cAAc,GAAGC,MAC9B5E,GAAU,GAAG2E,cAAc,GAAGE,OAEhCC,aAAa,EACbC,KAAM,KAER,IAAK,IAAIC,EAAI,EAAGA,EAAIhF,GAAUiF,OAAQD,IAAK,CACzC,MAAME,EAAU,IAAIxF,GAAM6E,KAAKY,OAAO,CACpCC,SAAU,IAAI1F,GAAM6E,KAAKG,OACvB1E,GAAUgF,GAAGL,cAAc,GAAGC,MAC9B5E,GAAUgF,GAAGL,cAAc,GAAGE,OAEhCjF,MAEAyF,KAAM,CACJ9D,IAAKyD,GAAK,GAAKnP,GAAWmP,GAAKM,EAC/BC,KAAM,IAAI7F,GAAM6E,KAAKiB,KAAK,GAAI,IAC9BC,WAAY,IAAI/F,GAAM6E,KAAKiB,KAAK,GAAI,IACpCE,OAAQ,IAAIhG,GAAM6E,KAAKoB,MAAM,EAAG,GAChCC,OAAQ,IAAIlG,GAAM6E,KAAKoB,MAAM,GAAI,OAG/BE,EAAa,IAAInG,GAAM6E,KAAKuB,WAAW,CAC3CC,QAAQ,+EAADvE,OAAiFxB,GAAUgF,GAAGL,cAAc,GAAGvG,MAAK,iBAAAoD,OAAgBxB,GAAUgF,GAAGL,cAAc,GAAGqB,MAAK,gBAEhLd,EAAQe,YAAY,SAAS,KACvBJ,EAAWK,SACbL,EAAWM,QAEXN,EAAWO,KAAKxG,EAAKsF,EACvB,GAEJ,CACF,IACC,CAAClF,MAMJmB,EAAAA,EAAAA,YAAU,KACJ/B,IACM,OAARR,QAAQ,IAARA,GAAAA,EAAUuE,SAAQ,CAACkD,EAAIC,KAAS,IAADC,EACZ,QAAjBA,EAAAnH,EAAciH,UAAG,IAAAE,GAAjBA,EAAmBpD,SAAQ,CAACC,EAAMoD,KAAW,IAADC,EAAAC,EAC1C,IAAIC,EAAMC,GACJ,OAAJxD,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,KACF,OAAJzD,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,KACsB,QADlBL,EACVrH,EAAciH,GAAIG,EAAQ,UAAE,IAAAC,OAAA,EAA5BA,EAA8BI,KACF,QADMH,EAClCtH,EAAciH,GAAIG,EAAQ,UAAE,IAAAE,OAAA,EAA5BA,EAA8BI,MAEhCvH,GAAkBwH,GAASA,EAAOJ,IAClClH,IAAiBsH,GAASA,EAAO,GAAE,GAWnC,IAEN,GACC,CAAC3H,IAGJ,MAAM6D,GAAsB+D,GACnBA,EAAWpH,KAAKwD,IACrB,MAAM6D,EAAW7D,EAAKuB,cAAc,GACpC,MAAO,CACLL,GAAQ,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMhD,OACVhC,MAAe,OAAR6I,QAAQ,IAARA,OAAQ,EAARA,EAAU7I,MACjB8I,SAAkB,OAARD,QAAQ,IAARA,OAAQ,EAARA,EAAUE,SACpBC,KAAMhE,EAAKgE,KACXC,MAAe,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUK,YACjBjE,KAAMD,EAAKC,KACXsB,cAAuB,OAARsC,QAAQ,IAARA,OAAQ,EAARA,EAAU3C,GACzBiD,SAAc,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,GAChBkD,cAAepE,EAAKqE,gBACpBX,KAAc,OAARG,QAAQ,IAARA,OAAQ,EAARA,EAAUpC,MAChBgC,KAAc,OAARI,QAAQ,IAARA,OAAQ,EAARA,EAAUrC,MACjB,IAIC8C,GAAaA,KACjBxG,IAAkB,EAAM,GAG1BC,EAAAA,EAAAA,YAAU,KACR,MAAMwG,EAAS3D,SAAS4D,cAAc,UAItC,OAHAD,EAAOE,IAAM,+CACbF,EAAOvG,OAAQ,EACf4C,SAAS8D,KAAKC,YAAYJ,GACnB,IAAM3D,SAAS8D,KAAKE,YAAYL,EAAO,GAC7C,IAyEH,SAASM,GAAQC,GACf,OAAOA,GAAOC,KAAKC,GAAK,IAC1B,CACA,SAASxB,GAAYyB,EAAMC,EAAMC,EAAMC,GACrC,GAAIH,GAAQC,GAAQC,GAAQC,EAAM,CAChC,MAAMC,EAAI,KACJC,EAAOT,GAAQM,EAAOF,GACtBM,EAAOV,GAAQO,EAAOF,GAEtBM,EACJT,KAAKU,IAAIH,EAAO,GAAKP,KAAKU,IAAIH,EAAO,GACrCP,KAAKW,IAAIb,GAAQI,IAASF,KAAKW,IAAIb,GAAQM,IAASJ,KAAKU,IAAIF,EAAO,GAAKR,KAAKU,IAAIF,EAAO,GAK3F,OAFiBF,GADP,EAAIN,KAAKY,MAAMZ,KAAKa,KAAKJ,GAAIT,KAAKa,KAAK,EAAIJ,KAC5B,GAG3B,CACA,OAAO,CACT,CAqDA,OACEK,EAAAA,GAAAA,MAACC,EAAAA,EAAa,CAAAC,SAAA,CACXnK,GACCoK,EAAAA,GAAAA,KAAC5N,GAAU,CAAA2N,UACTC,EAAAA,GAAAA,KAACC,EAAAA,EAAU,CAACC,MAAM,eAGpBL,EAAAA,GAAAA,MAACzS,GAAgB,CAAA2S,SAAA,EACfF,EAAAA,GAAAA,MAACpS,GAAa,CAAAsS,SAAA,EACZF,EAAAA,GAAAA,MAAChS,GAAe,CACdsS,QAASA,IApCGC,EAACC,EAAUrJ,KACjC,GAAIK,GAAO,CAAC,IAADiJ,EACT,MAAMhI,EAAO,CACXiI,KAAM,kBACNF,SAAUA,EACVrJ,OAAQA,GAEe,QAAzBsJ,EAAA/J,OAAO4D,0BAAkB,IAAAmG,GAAzBA,EAA2BlG,YAAYC,KAAKC,UAAUhC,GACxD,MACM/B,OAAOiK,QAAQ,wKACA,QAAbjJ,GACFhB,OAAOyG,KACL,0KACA,UAGFzG,OAAOyG,KACL,yEACA,UAIR,EAcyBoD,CAAgBzM,EAAUmD,IAAeiJ,SAAA,EACxDC,EAAAA,GAAAA,KAACjS,GAAW,CAAC0Q,IAAKvK,KAClB8L,EAAAA,GAAAA,KAAC9R,GAAQ,CAAA6R,SAAEpM,OAEX0D,IAKA2I,EAAAA,GAAAA,KAAAS,GAAAA,SAAA,KAJAT,EAAAA,GAAAA,KAACzR,GAAa,CAAC4R,QAASA,IA9JZO,MAEtB,GAAInK,OAAOoK,MAAO,CAChB,MAAMC,EAAQrK,OAAOoK,MAEhBC,EAAMC,iBAETD,EAAME,KAAK,oCAEbF,EAAMG,KAAKC,YAAY,CACrBC,WAAY,OACZtE,QAAS,CACP3H,MAAO,0GACPkM,YAAY,GAAD9I,OAAKpD,GAChBmM,SAAS,GAAD/I,OAAKlD,GACbkM,WAAY,IACZC,YAAa,IACbC,KAAM,CACJC,aAAa,GAADnJ,OAAKC,6BAA6B,wBAAAD,OAAuBX,IACrE+J,OAAO,GAADpJ,OAAKC,6BAA6B,wBAAAD,OAAuBX,MAGnEgK,QAAS,CACP,CACEzM,MAAO,wCACPsM,KAAM,CAEJC,aAAa,GAADnJ,OAAKC,6BAA6B,wBAAAD,OAAuBX,IACrE+J,OAAO,GAADpJ,OAAKC,6BAA6B,wBAAAD,OAAuBX,QAKzE,GA6HwCiJ,GAAkBX,UAC9CC,EAAAA,GAAAA,KAACvR,GAAQ,CAACgQ,IAAKiD,UAMrB7B,EAAAA,GAAAA,MAAClS,GAAc,CAAAoS,SAAA,EACbC,EAAAA,GAAAA,KAAC7Q,GAAa,CAAA4Q,SAAE/K,KAChB6K,EAAAA,GAAAA,MAACxR,GAAS,CAAA0R,SAAA,EACRF,EAAAA,GAAAA,MAACtR,GAAa,CAAAwR,SAAA,EACZC,EAAAA,GAAAA,KAACvR,GAAQ,CAACgQ,IAAKkD,KACf3B,EAAAA,GAAAA,KAACrR,GAAa,CAAAoR,SAAE/L,QAElB6L,EAAAA,GAAAA,MAAChR,GAAa,CAAAkR,SAAA,EACZC,EAAAA,GAAAA,KAACjR,GAAQ,CAAC0P,IAAKmD,KACf5B,EAAAA,GAAAA,KAAC/Q,GAAa,CAAA8Q,SAAEjM,cAItB+L,EAAAA,GAAAA,MAAChO,GAAoB,CAAAkO,SAAA,EACnBF,EAAAA,GAAAA,MAAC9N,GAAiB,CAAC8P,MAAO,CAAEC,YAAa,IAAK/B,SAAA,CAAC,iDACjC3J,GAAa,aAE3B4J,EAAAA,GAAAA,KAACjO,GAAiB,CAAAgO,SAEfgC,OAAO7L,EAAc8L,QAAQ,IAAM,IAAG,wBAAA5J,OAC1B2J,OAAO7L,EAAc8L,QAAQ,IAAG,6BAAA5J,OAChC2J,QAAQ7L,EAAgB,KAAM8L,QAAQ,IAAG,YAG1DnC,EAAAA,GAAAA,MAACxQ,GAAgB,CAAA0Q,SAAA,EACfC,EAAAA,GAAAA,KAACzQ,GAAiB,CAAAwQ,SAAC,gCACnBF,EAAAA,GAAAA,MAACpQ,GAAgB,CAAAsQ,SAAA,CACd3L,EAAU,MAAIE,SAGnBuL,EAAAA,GAAAA,MAAClQ,GAAU,CAAAoQ,SAAA,EACTC,EAAAA,GAAAA,KAACnQ,GAAS,CAAAkQ,SAAEvL,EAAa,GAAKA,EAAa,GAAK,OAChDwL,EAAAA,GAAAA,KAACjQ,GAAS,KACViQ,EAAAA,GAAAA,KAACnQ,GAAS,CAAAkQ,SAAErL,GAAkB,OAC9BsL,EAAAA,GAAAA,KAACjQ,GAAS,KACViQ,EAAAA,GAAAA,KAACnQ,GAAS,CAAAkQ,SAAEnL,GAAoB,OAChCoL,EAAAA,GAAAA,KAACjQ,GAAS,KACViQ,EAAAA,GAAAA,KAACnQ,GAAS,CAAAkQ,SAAEjL,GAAgB,UAE9BkL,EAAAA,GAAAA,KAAC/P,GAAc,KACf+P,EAAAA,GAAAA,KAAC7P,GAAwB,CAAA4P,SACd,OAARvK,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,KAAI,CAACyG,EAAIC,KAAS,IAAD+E,EA1KlBC,EA2KR,OACErC,EAAAA,GAAAA,MAACxP,GAAqB,CAAA0P,SAAA,EACpBC,EAAAA,GAAAA,KAACzP,GAAY,CAAAwP,UA7KTmC,EA6KsBjF,EA5KhBiF,EAAWC,QAAQ,0BAA2B,iCA6KtC,QAD2BF,EAC5CjM,EAAciH,UAAG,IAAAgF,OAAA,EAAjBA,EAAmBzL,KAAI,CAACwD,EAAMoD,KAAW,IAADgF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACvC,OACE5C,EAAAA,GAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,GAAAA,MAACpP,GAAgB,CACf0P,QAASA,IA1HduC,EAACC,EAAW3N,KAC7B,GAAIqC,GAAO,CAAC,IAADuL,EACT,MAAMtK,EAAO,CACXiI,KAAM,aACNoC,UAAWA,EACX3N,MAAOA,GAEgB,QAAzB4N,EAAArM,OAAO4D,0BAAkB,IAAAyI,GAAzBA,EAA2BxI,YAAYC,KAAKC,UAAUhC,GACxD,MACM/B,OAAOiK,QAAQ,wKACA,QAAbjJ,GACFhB,OAAOyG,KACL,0KACA,UAGFzG,OAAOyG,KACL,yEACA,UAIR,EAoGqC0F,CAAW1I,EAAKuB,cAAevB,EAAKhF,OAAO+K,SAAA,EAE1DC,EAAAA,GAAAA,KAACrP,GAAO,CAAC8N,IAAKzE,EAAKiE,MAAQjE,EAAKiE,MAAQ4E,KACxChD,EAAAA,GAAAA,MAAChP,GAAU,CAAAkP,SAAA,EACTC,EAAAA,GAAAA,KAACjP,GAAO,CAAAgP,SAAE/F,EAAKhF,SACf6K,EAAAA,GAAAA,MAAC5O,GAAU,CAAA8O,SAAA,CAAC,IAAE/F,EAAK8D,SAAS,QAC5BkC,EAAAA,GAAAA,KAAC7O,GAAM,CAAC0Q,MAAO,CAAEiB,QAAS9I,EAAKgE,KAAO,OAAS,QAAS+B,SACrD/F,EAAKgE,cAIZ6B,EAAAA,GAAAA,MAACxO,GAAgB,CACfwQ,MAAO,CACLiB,QAAS9M,EAAciH,GAAIpB,SAAWuB,EAAQ,EAAI,OAAS,QAC3D2C,SAAA,EAEFC,EAAAA,GAAAA,KAACzO,GAAY,KACbyO,EAAAA,GAAAA,KAACvO,GAAW,CAAAsO,UACVC,EAAAA,GAAAA,KAACrO,GAAY,CAAAoO,SACVgC,OACCvE,GACM,OAAJxD,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,KACF,OAAJzD,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,KACsB,QADlB0E,EACVpM,EAAciH,GAAIG,EAAQ,UAAE,IAAAgF,OAAA,EAA5BA,EAA8B3E,KACF,QADM4E,EAClCrM,EAAciH,GAAIG,EAAQ,UAAE,IAAAiF,OAAA,EAA5BA,EAA8B3E,MAC9BsE,QAAQ,IACR,IAAG,GAAA5J,OACA2J,OACDvE,GACM,OAAJxD,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,KACF,OAAJzD,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,KACsB,QADlB4E,EACVtM,EAAciH,GAAIG,EAAQ,UAAE,IAAAkF,OAAA,EAA5BA,EAA8B7E,KACF,QADM8E,EAClCvM,EAAciH,GAAIG,EAAQ,UAAE,IAAAmF,OAAA,EAA5BA,EAA8B7E,MAC9BsE,QAAQ,IACX,QAAA5J,OACE2J,QAECvE,GACM,OAAJxD,QAAI,IAAJA,OAAI,EAAJA,EAAMyD,KACF,OAAJzD,QAAI,IAAJA,OAAI,EAAJA,EAAM0D,KACsB,QADlB8E,EACVxM,EAAciH,GAAIG,EAAQ,UAAE,IAAAoF,OAAA,EAA5BA,EAA8B/E,KACF,QADMgF,EAClCzM,EAAciH,GAAIG,EAAQ,UAAE,IAAAqF,OAAA,EAA5BA,EAA8B/E,MAC5B,KACJsE,QAAQ,IACX,eA9CH5E,EAkDJ,MAtDgBF,EAyDJ,OAI9B2C,EAAAA,GAAAA,MAAC3N,GAAkB,CAAA6N,SAAA,CAAC,wBAnO5B,SAAoBgD,GAElB,MAAMC,EAAYD,EAAUtJ,MAAM,KAG5BwJ,EAAOD,EAAU,GACjBE,EAAQF,EAAU,GAClBG,EAAMH,EAAU,GAKtB,MAFmB,GAAA5K,OAAM6K,EAAI,KAAA7K,OAAI8K,EAAK,KAAA9K,OAAI+K,GACH1J,MAAM,KAAK,EAEpD,CAsNmC2J,CAAW9N,OACtC0K,EAAAA,GAAAA,KAAC1N,GAAY,CAAAyN,UACXC,EAAAA,GAAAA,KAAA,OAAK9E,GAAG,MAAM2G,MAAO,CAAEwB,MAAO,OAAQC,OAAQ,OAAQR,QAAS,OAAQS,KAAM,UAIlF1L,KACCmI,EAAAA,GAAAA,KAACxN,GAAoB,CAAC2N,QAAS7B,GAAWyB,UACxCC,EAAAA,GAAAA,KAACtN,GAAiB,CAAAqN,UAChBF,EAAAA,GAAAA,MAACjN,GAAmB,CAAAmN,SAAA,EAClBC,EAAAA,GAAAA,KAAClN,GAAO,CAAAiN,SAAC,8DACTC,EAAAA,GAAAA,KAAC/M,GAAW,CAACkN,QAAS7B,GAAWyB,SAAC,0BAK5B,C","sources":["routes/ScheduleView.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams, useNavigate, useLocation, useSearchParams } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport * as images from \"../assets/images/question\";\nimport Header from \"../components/Header\";\nimport { styled } from \"styled-components\";\nimport MainContainer from \"../components/MainContainer\";\nimport axios from \"axios\";\nimport importIcon from \"../assets/image/Bookmark.png\";\nimport shareIcon from \"../assets/image/wc_shareBtn.png\";\nimport viewIcon from \"../assets/image/viewIcon.png\";\nimport placeNoImage from \"../assets/image/placeNoImage.png\";\nimport { ClipLoader } from \"react-spinners\";\nimport markerIcon from \"../assets/image/marker.png\";\nimport scMarker1 from \"../assets/image/markers/scMarker1.png\";\nimport scMarker2 from \"../assets/image/markers/scMarker2.png\";\nimport scMarker3 from \"../assets/image/markers/scMarker3.png\";\nimport scMarker4 from \"../assets/image/markers/scMarker4.png\";\nimport scMarker5 from \"../assets/image/markers/scMarker5.png\";\nimport scMarker6 from \"../assets/image/markers/scMarker6.png\";\nimport scMarker7 from \"../assets/image/markers/scMarker7.png\";\nimport scMarker8 from \"../assets/image/markers/scMarker8.png\";\nimport scMarker9 from \"../assets/image/markers/scMarker9.png\";\nimport scMarker10 from \"../assets/image/markers/scMarker10.png\";\nimport scMarker11 from \"../assets/image/markers/scMarker11.png\";\nimport scMarker12 from \"../assets/image/markers/scMarker12.png\";\nimport scMarker13 from \"../assets/image/markers/scMarker13.png\";\nimport scMarker14 from \"../assets/image/markers/scMarker14.png\";\nimport scMarker15 from \"../assets/image/markers/scMarker15.png\";\nimport scMarker16 from \"../assets/image/markers/scMarker16.png\";\nimport scMarker17 from \"../assets/image/markers/scMarker17.png\";\nimport scMarker18 from \"../assets/image/markers/scMarker18.png\";\nimport scMarker19 from \"../assets/image/markers/scMarker19.png\";\nimport scMarker20 from \"../assets/image/markers/scMarker20.png\";\nimport scMarker21 from \"../assets/image/markers/scMarker21.png\";\nimport scMarker22 from \"../assets/image/markers/scMarker22.png\";\nimport scMarker23 from \"../assets/image/markers/scMarker23.png\";\nimport scMarker24 from \"../assets/image/markers/scMarker24.png\";\nimport scMarker25 from \"../assets/image/markers/scMarker25.png\";\nimport scMarker26 from \"../assets/image/markers/scMarker26.png\";\nimport scMarker27 from \"../assets/image/markers/scMarker27.png\";\nimport scMarker28 from \"../assets/image/markers/scMarker28.png\";\nimport scMarker29 from \"../assets/image/markers/scMarker29.png\";\nimport scMarker30 from \"../assets/image/markers/scMarker30.png\";\nimport scMarker31 from \"../assets/image/markers/scMarker31.png\";\nimport scMarker32 from \"../assets/image/markers/scMarker32.png\";\nimport scMarker33 from \"../assets/image/markers/scMarker33.png\";\nimport scMarker34 from \"../assets/image/markers/scMarker34.png\";\nimport scMarker35 from \"../assets/image/markers/scMarker35.png\";\nimport scMarker36 from \"../assets/image/markers/scMarker36.png\";\nimport scMarker37 from \"../assets/image/markers/scMarker37.png\";\nimport scMarker38 from \"../assets/image/markers/scMarker38.png\";\nimport scMarker39 from \"../assets/image/markers/scMarker39.png\";\nimport scMarker40 from \"../assets/image/markers/scMarker40.png\";\nimport scMarker41 from \"../assets/image/markers/scMarker41.png\";\nimport scMarker42 from \"../assets/image/markers/scMarker42.png\";\nimport scMarker43 from \"../assets/image/markers/scMarker43.png\";\nimport scMarker44 from \"../assets/image/markers/scMarker44.png\";\nimport scMarker45 from \"../assets/image/markers/scMarker45.png\";\nimport scMarker46 from \"../assets/image/markers/scMarker46.png\";\nimport scMarker47 from \"../assets/image/markers/scMarker47.png\";\nimport scMarker48 from \"../assets/image/markers/scMarker48.png\";\nimport scMarker49 from \"../assets/image/markers/scMarker49.png\";\nimport scMarker50 from \"../assets/image/markers/scMarker50.png\";\n\nconst markerImgs = [\n  scMarker1,\n  scMarker2,\n  scMarker3,\n  scMarker4,\n  scMarker5,\n  scMarker6,\n  scMarker7,\n  scMarker8,\n  scMarker9,\n  scMarker10,\n  scMarker11,\n  scMarker12,\n  scMarker13,\n  scMarker14,\n  scMarker15,\n  scMarker16,\n  scMarker17,\n  scMarker18,\n  scMarker19,\n  scMarker20,\n  scMarker21,\n  scMarker22,\n  scMarker23,\n  scMarker24,\n  scMarker25,\n  scMarker26,\n  scMarker27,\n  scMarker28,\n  scMarker29,\n  scMarker30,\n  scMarker31,\n  scMarker32,\n  scMarker33,\n  scMarker34,\n  scMarker35,\n  scMarker36,\n  scMarker37,\n  scMarker38,\n  scMarker39,\n  scMarker40,\n  scMarker41,\n  scMarker42,\n  scMarker43,\n  scMarker44,\n  scMarker45,\n  scMarker46,\n  scMarker47,\n  scMarker48,\n  scMarker49,\n  scMarker50,\n];\n\nconst ScheduleView = () => {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [nickName, setNickName] = useState(\"\");\n  const [scViewCount, setSCViewCount] = useState(0);\n  const [scImportCount, setSCImportCount] = useState(0);\n  const [profile, setProfile] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [locationList, setLocationList] = useState([]);\n  const [friend, setFriend] = useState(\"\");\n  const [traffic, setTraffic] = useState(\"\");\n  const [hotel, setHotel] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [thumbnail, setThumbnail] = useState(\"\");\n  const [other, setOther] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const [dateList, setDateList] = useState([]);\n  const [mySchedule, setMySchedule] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [detailScList, setDetailScList] = useState([]);\n  const [dateGroupData, setDateGroupData] = useState({});\n  const [totalDistance, setTotalDistance] = useState(0);\n  const [totalScCount, setTotalScCount] = useState(0);\n  const { naver } = window;\n  const [map, setMap] = useState([]);\n  const [markerArr, setMarkerArr] = useState([]);\n  const [detailArr, setDetailArr] = useState(null);\n  const [profileUserId, setProfileUserId] = useState(\"\");\n  // const [markerIdx, setMarkerIdx] = useState(null);\n  const markers = useRef([]);\n  // const totalDistance = useRef(0);\n\n  const [userId, setUserId] = useState(null);\n  const [jwt, setJwt] = useState(\"\");\n  // const [rnSend, setRnSend] = useState(false);\n  const [isApp, setIsApp] = useState(null);\n  const [platform, setPlatform] = useState(null);\n\n  const scheduleId = searchParams.get(\"scnum\");\n\n  const [rnData, setRnData] = useState({});\n\n  const [showLoginModal, setShowLoginModal] = useState(false);\n\n  // console.log(dateGroupData);\n\n  useEffect(() => {\n    const getScheduleData = async () => {\n      await axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_API_URL}/schedule/getSchedule1`,\n        // headers: {\n        // Authorization: loginData?.jwt,\n        // },\n        data: {\n          // scheduleId: scheduleData.data.scheduleId,x\n          scheduleId: scheduleId,\n        },\n      })\n        .then((res) => {\n          console.log(res.data, \"이거\");\n          if (res.data.boolean) {\n            setNickName(res.data.userName);\n            setProfileUserId(res.data.user_id);\n            setSCViewCount(res.data.schedule.view);\n            setSCImportCount(res.data.schedule.importCount);\n            setProfile(res.data.userProfile);\n            setStartDate(res.data.schedule.startDate);\n            setEndDate(res.data.schedule.endDate);\n            setLocationList(res.data.locationArr);\n            setFriend(res.data.schedule.friend);\n            setTraffic(res.data.schedule.traffic);\n            setHotel(res.data.schedule.hotel);\n            setTitle(res.data.schedule.title);\n            setOther(res.data.schedule.other);\n            setCreatedAt(res.data.schedule.createdAt);\n            setThumbnail(res.data.schedule.thumbnail);\n            const array = [];\n            const curDate = new Date(res.data.schedule.startDate);\n            while (curDate <= new Date(res.data.schedule.endDate)) {\n              array.push(curDate.toISOString().split(\"T\")[0]);\n              curDate.setDate(curDate.getDate() + 1);\n            }\n            setDateList(array);\n            setDetailArr(res.data.detailArr);\n            const resultDetailScList = FormatDetailScList(res.data.detailArr);\n            setDetailScList(resultDetailScList);\n            groupDataByDate(resultDetailScList);\n            // if (res.data.schedule.userId === loginData?.id) {\n            //   setMySchedule(true);\n            // }\n            window.ReactNativeWebView?.postMessage(\n              JSON.stringify({\n                mount: true,\n                writer: res.data.schedule.userId,\n                scheduleId: scheduleId,\n                title: res.data.schedule.title,\n                nickName: res.data.userName,\n                thumbnail: res.data.schedule.thumbnail,\n              })\n            );\n            setLoading(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    getScheduleData();\n    //android\n    document.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData.loginData.jwt);\n        }\n        // setRnSend(true);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n        // window.ReactNativeWebView?.postMessage(\n        //   JSON.stringify({ isWriter: parseData.loginData.id === writerId ? true : false })\n        // );\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    //ios\n    window.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData.loginData.jwt);\n        }\n        // setRnSend(true);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n        // window.ReactNativeWebView?.postMessage(\n        //   JSON.stringify({ isWriter: parseData.loginData.id === writerId ? true : false })\n        // );\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (detailArr) {\n      console.log(detailArr);\n      const map = new naver.maps.Map(\"map\", {\n        center: new naver.maps.LatLng(\n          detailArr[0].tour_place_id[0].map_y,\n          detailArr[0].tour_place_id[0].map_x\n        ),\n        zoomControl: false,\n        zoom: 10,\n      });\n      for (let i = 0; i < detailArr.length; i++) {\n        const markers = new naver.maps.Marker({\n          position: new naver.maps.LatLng(\n            detailArr[i].tour_place_id[0].map_y,\n            detailArr[i].tour_place_id[0].map_x\n          ),\n          map,\n          // 원하는 이미지로 마커 커스텀\n          icon: {\n            url: i <= 49 ? markerImgs[i] : markerIcon,\n            size: new naver.maps.Size(50, 52),\n            scaledSize: new naver.maps.Size(50, 52),\n            origin: new naver.maps.Point(0, 0),\n            anchor: new naver.maps.Point(25, 26),\n          },\n        });\n        const infoWindow = new naver.maps.InfoWindow({\n          content: `<div style=\"width:auto; text-align:center; font-size:75%; padding:10px;\"><b>${detailArr[i].tour_place_id[0].title}</b><br /><p>${detailArr[i].tour_place_id[0].addr1}</p></div>`,\n        });\n        markers.addListener(\"click\", () => {\n          if (infoWindow.getMap()) {\n            infoWindow.close();\n          } else {\n            infoWindow.open(map, markers);\n          }\n        });\n      }\n    }\n  }, [detailArr]);\n  // const sendWriter = (user) => {\n  //   window.ReactNativeWebView?.postMessage(\n  //     JSON.stringify({ isWriter: user === writerId ? true : false })\n  //   );\n  // };\n  useEffect(() => {\n    if (dateGroupData) {\n      dateList?.forEach((el, idx) => {\n        dateGroupData[el]?.forEach((item, index) => {\n          let dis = getDistance(\n            item?.mapy,\n            item?.mapx,\n            dateGroupData[el][index + 1]?.mapy,\n            dateGroupData[el][index + 1]?.mapx\n          );\n          setTotalDistance((prev) => prev + dis);\n          setTotalScCount((prev) => prev + 1);\n\n          // setTotalDistance(\n          //   totalDistance +\n          //     getDistance(\n          //       item?.mapy,\n          //       item?.mapx,\n          //       dateGroupData[el][index + 1]?.mapy,\n          //       dateGroupData[el][index + 1]?.mapx\n          //     )\n          // );\n        });\n      });\n    }\n  }, [dateGroupData]);\n\n  //백엔드에서 받은 데이터를 리스트로 보여주기위한 데이터 가공\n  const FormatDetailScList = (inputArray) => {\n    return inputArray.map((item) => {\n      const location = item.tour_place_id[0];\n      return {\n        id: item?.userId,\n        title: location?.title,\n        category: location?.describe,\n        memo: item.memo,\n        image: location?.first_image,\n        date: item.date,\n        tour_place_id: location?.id,\n        detailId: item?.id,\n        contenttypeid: item.content_type_id,\n        mapx: location?.map_x,\n        mapy: location?.map_y,\n      };\n    });\n  };\n\n  const closeModal = () => {\n    setShowLoginModal(false);\n  };\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://developers.kakao.com/sdk/js/kakao.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    return () => document.body.removeChild(script);\n  }, []);\n\n  const kakaoShareEvent = () => {\n    // console.log(\"왜 안돼?\");\n    if (window.Kakao) {\n      const kakao = window.Kakao;\n\n      if (!kakao.isInitialized()) {\n        // javascript key\n        kakao.init(\"69c873f1cf4e580ab99c761390d9777e\");\n      }\n      kakao.Link.sendDefault({\n        objectType: \"feed\",\n        content: {\n          title: \"Chat GPT 기반 당일치기 여행추천 앱 여행대로\",\n          description: `${title}`,\n          imageUrl: `${thumbnail}`,\n          imageWidth: 400,\n          imageHeight: 300,\n          link: {\n            mobileWebUrl: `${process.env.REACT_APP_WEB_URL}/scheduleview?scnum=${scheduleId}`,\n            webUrl: `${process.env.REACT_APP_WEB_URL}/scheduleview?scnum=${scheduleId}`,\n          },\n        },\n        buttons: [\n          {\n            title: \"일정 확인하기\",\n            link: {\n              // 기본 도메인 설정값으로 가짐 (링크를 뭘 주던) 수정\n              mobileWebUrl: `${process.env.REACT_APP_WEB_URL}/scheduleview?scnum=${scheduleId}`,\n              webUrl: `${process.env.REACT_APP_WEB_URL}/scheduleview?scnum=${scheduleId}`,\n            },\n          },\n        ],\n      });\n    }\n  };\n\n  const dateFormat = (dateString) => {\n    const formattedString = dateString.replace(/(\\d{4})-(\\d{2})-(\\d{2})/, \"$1년 $2월 $3일\");\n    return formattedString;\n  };\n\n  //date를 YYYY.MM.DD로 변환\n  function formatDate(inputDate) {\n    // 입력된 날짜 문자열을 '-'로 분리하여 배열로 만듭니다.\n    const dateParts = inputDate.split(\"-\");\n\n    // 연도, 월, 일을 추출\n    const year = dateParts[0];\n    const month = dateParts[1];\n    const day = dateParts[2];\n\n    // 새로운 형식으로 날짜 문자열 생성\n    const formattedDate = `${year}.${month}.${day}`;\n    const NewformattedDate = formattedDate.split(\"T\")[0];\n    return NewformattedDate;\n  }\n\n  function groupDataByDate(data) {\n    const groupedData = {};\n    data?.forEach((item) => {\n      const date = item.date;\n\n      if (!groupedData[date]) {\n        groupedData[date] = [];\n      }\n\n      groupedData[date].push(item);\n    });\n    setDateGroupData(groupedData);\n  }\n\n  function deg2rad(deg) {\n    return deg * (Math.PI / 180);\n  }\n  function getDistance(lat1, lon1, lat2, lon2) {\n    if (lat1 && lon1 && lat2 && lon2) {\n      const R = 6371; // 지구의 반지름 (단위: 킬로미터)\n      const dLat = deg2rad(lat2 - lat1);\n      const dLon = deg2rad(lon2 - lon1);\n\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      const distance = R * c * 1000; // 거리 (미터)\n      // totalDistance.current += distance;\n      return distance;\n    }\n    return 0;\n  }\n\n  const moveDetail = (contentId, title) => {\n    if (isApp) {\n      const data = {\n        name: \"moveDetail\",\n        contentId: contentId,\n        title: title,\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(data));\n    } else {\n      if (window.confirm(\"장소정보를 확인하시려면 여행대로 앱 다운로드가 필요합니다.\")) {\n        if (platform === \"ios\") {\n          window.open(\n            \"https://apps.apple.com/kr/app/%EC%97%AC%ED%96%89%EB%8C%80%EB%A1%9C-%EB%8B%B9%EC%9D%BC%EC%B9%98%EA%B8%B0-%EC%97%AC%ED%96%89%EA%B3%BC-nft-%EC%A0%80%EC%9E%A5/id6458978344\",\n            \"_blank\"\n          );\n        } else {\n          window.open(\n            \"https://play.google.com/store/apps/details?id=com.datatourapp&hl=ko-KR\",\n            \"_blank\"\n          );\n        }\n      }\n    }\n  };\n\n  const moveUserProfile = (username, userId) => {\n    if (isApp) {\n      const data = {\n        name: \"moveUserProfile\",\n        username: username,\n        userId: userId,\n      };\n      window.ReactNativeWebView?.postMessage(JSON.stringify(data));\n    } else {\n      if (window.confirm(\"장소정보를 확인하시려면 여행대로 앱 다운로드가 필요합니다.\")) {\n        if (platform === \"ios\") {\n          window.open(\n            \"https://apps.apple.com/kr/app/%EC%97%AC%ED%96%89%EB%8C%80%EB%A1%9C-%EB%8B%B9%EC%9D%BC%EC%B9%98%EA%B8%B0-%EC%97%AC%ED%96%89%EA%B3%BC-nft-%EC%A0%80%EC%9E%A5/id6458978344\",\n            \"_blank\"\n          );\n        } else {\n          window.open(\n            \"https://play.google.com/store/apps/details?id=com.datatourapp&hl=ko-KR\",\n            \"_blank\"\n          );\n        }\n      }\n    }\n\n};\n\n  return (\n    <MainContainer>\n      {loading ? (\n        <LoadingBox>\n          <ClipLoader color=\"#25B1FA\" />\n        </LoadingBox>\n      ) : (\n        <ContentContainer>\n          <UserContainer>\n            <UserProfileArea\n              onClick={() => moveUserProfile(nickName, profileUserId)}>\n              <UserProfile src={profile} />\n              <UserName>{nickName}</UserName>\n            </UserProfileArea>\n            {!isApp ? (\n              <SaveCountArea onClick={() => kakaoShareEvent()}>\n                <SaveIcon src={shareIcon} />\n              </SaveCountArea>\n            ) : (\n              <></>\n            )}\n          </UserContainer>\n          <UserContainer2>\n            <ScheduleTitle>{title}</ScheduleTitle>\n            <CountArea>\n              <SaveCountArea>\n                <SaveIcon src={importIcon} />\n                <SaveCountText>{scImportCount}</SaveCountText>\n              </SaveCountArea>\n              <ViewCountArea>\n                <ViewIcon src={viewIcon} />\n                <ViewCountText>{scViewCount}</ViewCountText>\n              </ViewCountArea>\n            </CountArea>\n          </UserContainer2>\n          <TotalDescriptionArea>\n            <TotalDistanceText style={{ marginRight: 26 }}>\n              등록된 여행지 수: {totalScCount}개\n            </TotalDistanceText>\n            <TotalDistanceText>\n              {/* 총 거리: {Number(totalDistance.toFixed(1))} */}\n              {Number(totalDistance.toFixed(1)) < 100\n                ? `총 거리: ${Number(totalDistance.toFixed(1))}m`\n                : `총 거리: ${Number((totalDistance / 1000).toFixed(1))}km`}\n            </TotalDistanceText>\n          </TotalDescriptionArea>\n          <ScheduleDateArea>\n            <ScheduleDateTitle>여행 날짜:</ScheduleDateTitle>\n            <ScheduleDateText>\n              {startDate} ~ {endDate}\n            </ScheduleDateText>\n          </ScheduleDateArea>\n          <SelectArea>\n            <SelectBox>{locationList[0] ? locationList[0] : \"-\"}</SelectBox>\n            <SelectBar />\n            <SelectBox>{friend ? friend : \"-\"}</SelectBox>\n            <SelectBar />\n            <SelectBox>{traffic ? traffic : \"-\"}</SelectBox>\n            <SelectBar />\n            <SelectBox>{hotel ? hotel : \"-\"}</SelectBox>\n          </SelectArea>\n          <SelectUnderBar />\n          <ScheduleContentContainer>\n            {dateList?.map((el, idx) => {\n              return (\n                <ScheduleListContainer key={idx}>\n                  <ScheduleDate>{dateFormat(el)}</ScheduleDate>\n                  {dateGroupData[el]?.map((item, index) => {\n                    return (\n                      <div key={index}>\n                        <ScheduleListArea\n                          onClick={() => moveDetail(item.tour_place_id, item.title)}\n                        >\n                          <ScImage src={item.image ? item.image : placeNoImage} />\n                          <ScTextArea>\n                            <ScTitle>{item.title}</ScTitle>\n                            <ScCategory>[{item.category}]</ScCategory>\n                            <ScMemo style={{ display: item.memo ? \"flex\" : \"none\" }}>\n                              {item.memo}\n                            </ScMemo>\n                          </ScTextArea>\n                        </ScheduleListArea>\n                        <DetailScLineArea\n                          style={{\n                            display: dateGroupData[el].length === index + 1 ? \"none\" : \"flex\",\n                          }}\n                        >\n                          <DetailScLine />\n                          <DistanceBox>\n                            <DistanceText>\n                              {Number(\n                                getDistance(\n                                  item?.mapy,\n                                  item?.mapx,\n                                  dateGroupData[el][index + 1]?.mapy,\n                                  dateGroupData[el][index + 1]?.mapx\n                                ).toFixed(1)\n                              ) < 100\n                                ? `${Number(\n                                    getDistance(\n                                      item?.mapy,\n                                      item?.mapx,\n                                      dateGroupData[el][index + 1]?.mapy,\n                                      dateGroupData[el][index + 1]?.mapx\n                                    ).toFixed(1)\n                                  )}m`\n                                : `${Number(\n                                    (\n                                      getDistance(\n                                        item?.mapy,\n                                        item?.mapx,\n                                        dateGroupData[el][index + 1]?.mapy,\n                                        dateGroupData[el][index + 1]?.mapx\n                                      ) / 1000\n                                    ).toFixed(1)\n                                  )}km`}\n                            </DistanceText>\n                          </DistanceBox>\n                        </DetailScLineArea>\n                      </div>\n                    );\n                  })}\n                </ScheduleListContainer>\n              );\n            })}\n          </ScheduleContentContainer>\n          <CreateDateTextArea>작성일 : {formatDate(createdAt)}</CreateDateTextArea>\n          <MapContainer>\n            <div id=\"map\" style={{ width: \"100%\", height: \"100%\", display: \"flex\", flex: 1 }} />\n          </MapContainer>\n        </ContentContainer>\n      )}\n      {showLoginModal && (\n        <ShareModalBackground onClick={closeModal}>\n          <AlertModalContent>\n            <AlertModalContainer>\n              <Message>로그인이 필요합니다.</Message>\n              <ModalButton onClick={closeModal}>닫기</ModalButton>\n            </AlertModalContainer>\n          </AlertModalContent>\n        </ShareModalBackground>\n      )}\n    </MainContainer>\n  );\n};\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 100px;\n`;\nconst UserContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 14px;\n  margin-bottom: 16px;\n`;\nconst UserContainer2 = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  /* margin-top: 14px;\n  margin-bottom: 16px; */\n`;\nconst UserProfileArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst UserProfile = styled.img`\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n  margin-right: 8px;\n`;\nconst UserName = styled.span`\n  display: flex;\n  font-size: 14px;\n  font-weight: 500;\n  color: #25b1fa;\n`;\nconst CountArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst SaveCountArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: 10px;\n`;\nconst SaveIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n`;\nconst SaveCountText = styled.span`\n  display: flex;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n`;\nconst ViewCountArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst ViewIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n`;\nconst ViewCountText = styled.span`\n  display: flex;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n`;\nconst ScheduleTitle = styled.div`\n  display: flex;\n  font-size: 18px;\n  font-weight: 700;\n  color: #000;\n  /* margin-bottom: 6px; */\n`;\nconst ScheduleDateArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 12px;\n  margin-top: 12px;\n`;\nconst ScheduleDateTitle = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  margin-right: 6px;\n`;\nconst ScheduleDateText = styled.span`\n  font-size: 14px;\n  font-weight: 700;\n  color: #25b1fa;\n`;\nconst SelectArea = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 12px;\n`;\nconst SelectBox = styled.div`\n  height: 100%;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 500;\n  color: #25b1fa;\n  padding: 0 10px;\n`;\nconst SelectBar = styled.div`\n  height: 100%;\n  width: 1px;\n  background-color: #d9d9d9;\n`;\nconst SelectUnderBar = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: #e6e6e6;\n  margin-bottom: 16px;\n`;\nconst ScheduleContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid #e6e6e6;\n  margin-bottom: 10px;\n`;\nconst ScheduleListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\nconst ScheduleDate = styled.div`\n  margin-bottom: 22px;\n  font-size: 14px;\n  font-weight: 600;\n  color: #000;\n`;\nconst ScheduleListArea = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n`;\nconst ScImage = styled.img`\n  width: 56px;\n  height: 56px;\n  border-radius: 8px;\n  margin-right: 10px;\n  border: 1px solid #25b1fa;\n`;\nconst ScTextArea = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst ScTitle = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst ScCategory = styled.div`\n  font-size: 12px;\n  font-weight: 500;\n  color: #25b1fa;\n  margin-bottom: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst ScMemo = styled.div`\n  font-size: 12px;\n  font-weight: 500;\n  color: #787878;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst DetailScLineArea = styled.div`\n  width: 100%;\n  height: 38px;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n`;\nconst DetailScLine = styled.div`\n  display: flex;\n  width: 1px;\n  height: 38px;\n  background-color: #25b1fa;\n  position: absolute;\n  left: 28px;\n`;\nconst DistanceBox = styled.div`\n  display: flex;\n  width: 56px;\n  height: 18px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  border: 1px solid #25b1fa;\n  background-color: #fff;\n  position: absolute;\n  top: 10px;\n`;\nconst DistanceText = styled.span`\n  display: flex;\n  font-size: 12px;\n  font-weight: 500;\n  color: #25b1fa;\n`;\nconst TotalDescriptionArea = styled.div`\n  display: flex;\n  width: 100%;\n  height: 52px;\n  flex-direction: row;\n  align-items: center;\n  background-color: #f1f1f1;\n  margin-bottom: 6px;\n  margin-top: 12px;\n  /* padding: 0 20px; */\n`;\nconst TotalPlaceText = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n  color: #000;\n`;\nconst TotalDistanceText = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n  color: #000;\n`;\nconst CreateDateTextArea = styled.div`\n  display: flex;\n  font-size: 12px;\n  font-weight: 400;\n  color: #787878;\n`;\nconst LoadingBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n`;\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 420px;\n  margin-top: 20px;\n`;\nconst ShareModalBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst AlertModalContent = styled.div`\n  align-items: center;\n  background-color: white;\n  width: 60%;\n  padding: 20px;\n  border-radius: 10px;\n`;\nconst AlertModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Message = styled.p`\n  font-size: 18px;\n  text-align: center;\n  margin-bottom: 20px;\n`;\nconst ModalButton = styled.button`\n  padding: 10px 20px;\n  background-color: #3498db;\n  color: #ffffff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport default ScheduleView;\n"],"names":["markerImgs","scMarker1","scMarker2","scMarker3","scMarker4","scMarker5","scMarker6","scMarker7","scMarker8","scMarker9","scMarker10","ContentContainer","styled","div","_templateObject","_taggedTemplateLiteral","UserContainer","_templateObject2","UserContainer2","_templateObject3","UserProfileArea","_templateObject4","UserProfile","img","_templateObject5","UserName","span","_templateObject6","CountArea","_templateObject7","SaveCountArea","_templateObject8","SaveIcon","_templateObject9","SaveCountText","_templateObject10","ViewCountArea","_templateObject11","ViewIcon","_templateObject12","ViewCountText","_templateObject13","ScheduleTitle","_templateObject14","ScheduleDateArea","_templateObject15","ScheduleDateTitle","_templateObject16","ScheduleDateText","_templateObject17","SelectArea","_templateObject18","SelectBox","_templateObject19","SelectBar","_templateObject20","SelectUnderBar","_templateObject21","ScheduleContentContainer","_templateObject22","ScheduleListContainer","_templateObject23","ScheduleDate","_templateObject24","ScheduleListArea","_templateObject25","ScImage","_templateObject26","ScTextArea","_templateObject27","ScTitle","_templateObject28","ScCategory","_templateObject29","ScMemo","_templateObject30","DetailScLineArea","_templateObject31","DetailScLine","_templateObject32","DistanceBox","_templateObject33","DistanceText","_templateObject34","TotalDescriptionArea","_templateObject35","TotalDistanceText","_templateObject36","_templateObject37","CreateDateTextArea","_templateObject38","LoadingBox","_templateObject39","MapContainer","_templateObject40","ShareModalBackground","_templateObject41","AlertModalContent","_templateObject42","AlertModalContainer","_templateObject43","Message","p","_templateObject44","ModalButton","button","_templateObject45","ScheduleView","useNavigate","state","useLocation","searchParams","setSearchParams","useSearchParams","nickName","setNickName","useState","scViewCount","setSCViewCount","scImportCount","setSCImportCount","profile","setProfile","startDate","setStartDate","endDate","setEndDate","locationList","setLocationList","friend","setFriend","traffic","setTraffic","hotel","setHotel","title","setTitle","thumbnail","setThumbnail","other","setOther","createdAt","setCreatedAt","dateList","setDateList","mySchedule","setMySchedule","loading","setLoading","detailScList","setDetailScList","dateGroupData","setDateGroupData","totalDistance","setTotalDistance","totalScCount","setTotalScCount","naver","window","map","setMap","markerArr","setMarkerArr","detailArr","setDetailArr","profileUserId","setProfileUserId","userId","setUserId","useRef","jwt","setJwt","isApp","setIsApp","platform","setPlatform","scheduleId","get","rnData","setRnData","showLoginModal","setShowLoginModal","useEffect","async","axios","method","url","concat","process","data","then","res","console","log","boolean","_window$ReactNativeWe","userName","user_id","schedule","view","importCount","userProfile","locationArr","array","curDate","Date","push","toISOString","split","setDate","getDate","resultDetailScList","FormatDetailScList","groupedData","forEach","item","date","groupDataByDate","ReactNativeWebView","postMessage","JSON","stringify","mount","writer","catch","err","getScheduleData","document","addEventListener","e","parseData","parse","loginData","id","maps","Map","center","LatLng","tour_place_id","map_y","map_x","zoomControl","zoom","i","length","markers","Marker","position","icon","markerIcon","size","Size","scaledSize","origin","Point","anchor","infoWindow","InfoWindow","content","addr1","addListener","getMap","close","open","el","idx","_dateGroupData$el","index","_dateGroupData$el2","_dateGroupData$el3","dis","getDistance","mapy","mapx","prev","inputArray","location","category","describe","memo","image","first_image","detailId","contenttypeid","content_type_id","closeModal","script","createElement","src","body","appendChild","removeChild","deg2rad","deg","Math","PI","lat1","lon1","lat2","lon2","R","dLat","dLon","a","sin","cos","atan2","sqrt","_jsxs","MainContainer","children","_jsx","ClipLoader","color","onClick","moveUserProfile","username","_window$ReactNativeWe3","name","confirm","_Fragment","kakaoShareEvent","Kakao","kakao","isInitialized","init","Link","sendDefault","objectType","description","imageUrl","imageWidth","imageHeight","link","mobileWebUrl","webUrl","buttons","shareIcon","importIcon","viewIcon","style","marginRight","Number","toFixed","_dateGroupData$el4","dateString","replace","_dateGroupData$el5","_dateGroupData$el6","_dateGroupData$el7","_dateGroupData$el8","_dateGroupData$el9","_dateGroupData$el10","moveDetail","contentId","_window$ReactNativeWe2","placeNoImage","display","inputDate","dateParts","year","month","day","formatDate","width","height","flex"],"sourceRoot":""}