{"version":3,"file":"static/js/355.abb7fe37.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","_ref","envelope","derivative","duration","bounce","velocity","mass","warning","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","Math","exp","d","e","pow","f","g","initialGuess","result","i","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","options","keys","some","key","undefined","spring","keyframes","restDelta","restSpeed","origin","target","length","state","done","value","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","t","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","current","currentVelocity","calcGeneratorVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","velocitySampleDuration","resolveValue","prevT","max","velocityPerSecond","instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","easingDefinitionToFunction","definition","invariant","x1","y1","x2","y2","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","offset","o","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","interpolate","values","splice","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","type","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","round","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","push","animation","element","arguments","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","complex","test","isNone","isZeroValueString","MotionGlobalConfig","animateMotionValue","transition","valueTransition","getValueTransition","isTargetAnimatable","defaultOrigin","from","get","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","getProps","acceleratedAnimation","animateSingleValue","motionValue$1","isMotionValue","motionValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","visualElement","transitionOverride","transitionEnd","makeTargetAnimatable","willChange","getValue","animations","animationTypeState","animationState","getState","valueTarget","window","HandoffAppearAnimations","appearId","optimizedAppearDataAttribute","canSkip","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","animateVariant","variant","resolved","resolveVariant","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","forEach","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","camelToDash","isAnimationControls","isKeyframesTarget","_delay","LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PresenceContext","acos","Queue","constructor","this","order","scheduled","process","index","indexOf","delete","clear","stepsOrder","schedule","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","name","isForcedMotionValue","layoutId","scaleCorrectors","convertBoundingBoxToBox","top","left","right","bottom","y","convertBoxToBoundingBox","_ref2","transformBoxPoints","point","transformPoint","topLeft","bottomRight","scalePoint","scale","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","projectionDelta","instance","style","display","layoutScroll","scroll","root","transformBox","hasTransform","latestValues","snapToDefault","Number","isInteger","translateAxis","distance","transformAxis","transforms","scaleKey","originKey","axisOrigin","mix","xKeys","yKeys","transform","createDelta","createBox","addScaleCorrector","correctors","assign","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","measureViewportBox","getBoundingClientRect","measurePageBox","rootProjectionNode","viewportBox","splitCSSVariableRegex","maxDepth","getVariableValue","depth","token","fallback","match","exec","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","trim","isNumericalString","parseFloat","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","number","px","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","filter","positionalValues","width","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","findDimensionValueType","to","toType","numKeyframes","fromIndex","removedTransforms","render","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","setStaticValue","targetBbox","_ref12","isBrowser","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","featureNames","numFeatures","propEventHandlers","numVariantProps","variantProps","VisualElement","parent","presenceContext","reducedMotionConfig","visualState","children","isVariantNode","isControllingVariants","Map","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","projection","scheduleRender","baseTarget","initialValues","initial","manuallyAnimateOnMount","initialMotionValues","scrapeMotionValuesFromProps","_props","_prevProps","mount","visualElementStore","removeFromVariantTree","addVariantChild","bindToMotionValue","hasReducedMotionListener","initPrefersReducedMotion","prefersReducedMotion","unmount","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","loadFeatures","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","renderedProps","Feature","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","dragConstraints","layoutRoot","setOptions","alwaysMeasureLayout","isRefObject","animationType","initialPromotionConfig","updateFeatures","feature","isMounted","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","transformTemplate","prevProps","prevPresenceContext","listener","prev","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","getClosestVariantNode","getVariantContext","context","prop","isVariantLabel","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","_a","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","resolveVariantFromProps","eventName","SubscriptionManager","_len","args","_key","DOMVisualElement","compareDocumentPosition","vars","transformValues","getOrigin","checkTargetForNewValues","parsed","MotionContext","LazyContext","strict","useCreateMotionContext","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","join","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","createVisualElement","useRender","useVisualState","Component","ForwardRefComponent","forwardRef","externalRef","configAndProps","useLayoutId","lazyContext","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","wantsHandoff","HandoffComplete","useIsomorphicLayoutEffect","animateChanges","useEffect","useVisualElement","React","Provider","useCallback","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","createHtmlRenderState","transformOrigin","copyRawValuesOnly","source","useStyle","buildHTMLStyles","enableHardwareAcceleration","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","createSvgRenderState","attrs","useSVGProps","_isStatic","visualProps","buildSVGAttrs","isSVGTag","rawStyles","createUseRender","forwardMotionProps","ref","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","svgMotionConfig","read","dimensions","getBBox","tagName","renderSVG","htmlMotionConfig","addDomEvent","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","pipe","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prevLength","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","calcViewportConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","isSVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasRotate","rotateZ","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","createDomVisualElement","SVGVisualElement","HTMLVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","isCSSVariableName","cssVariableRegex","SVGElement","defaultValueType","getDefaultValueType","defaultValueTypes","numberValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","find","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","transformPerspective","alpha","progressPercentage","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultType","computedStyle","childSubscription","textContent","renderHTML","translateAlias","numTransforms","getValueAsType","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","allowTransformNone","transformString","transformName","buildTransform","setProperty","newValues","camelCaseAttributes","getAttribute","dashKeys","array","camelKeys","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","substring","getCurrent","currentValues","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","setVariants","variantLabels","setValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","transitionOrigin","arr","item","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","interpolator","progressInRange","any","fillOffset","remaining","offsetProgress","combineFunctions","transformers","toFromDifference","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","tokenised","originalValue","toString","parseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}