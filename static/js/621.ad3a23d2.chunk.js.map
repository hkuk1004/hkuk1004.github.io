{"version":3,"file":"static/js/621.ad3a23d2.chunk.js","mappings":"2PASA,MAsFA,EAtFiBA,KAAO,IAADC,EAAAC,EAAAC,EACrB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAChCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,IAChCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,KACzC,MAAEO,IAAUC,EAAAA,EAAAA,OAElBC,EAAAA,EAAAA,YAAU,KACQC,iBACRC,EAAAA,EAAAA,GAAM,CACVC,OAAQ,MACRC,IAAI,GAADC,OAAKC,qCAA6B,eAEpCC,MAAMC,IACLb,EAAYa,EAAIC,MAChBnB,EAAWkB,EAAIC,KAAKC,OAAO,IAE5BC,OAAOC,IACNC,QAAQC,IAAIF,EAAI,GAChB,EAENG,EAAS,GACR,IAEH,MA+BMC,EAAaC,IAAwB,IAAvB,OAAEC,EAAM,MAAEC,GAAOF,EACnC,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,KAAM,QACNC,QAASA,IAAO/B,EAAUH,EAnCJ8B,KAC1BtB,EAAe,IAAID,EAAauB,EAAQ,IACxC1B,EAAWD,EAAU,EAAE,EAiCiBgC,CAAmBL,GA/B1ClB,iBACXC,EAAAA,EAAAA,GAAM,CACVC,OAAQ,OACRC,IAAI,GAADC,OAAKC,qCAA6B,WACrCmB,QAAS,CACPC,cAAoB,OAAL5B,QAAK,IAALA,OAAK,EAALA,EAAO6B,KAExBlB,KAAM,CACJmB,YAAa,IAAIhC,EAAauB,EAAQ,MAGvCZ,MAAMC,IACLrB,EAAS,UAAW,CAClBW,MAAO,CACL+B,KAAMrB,EAAIC,KAAKqB,SACfC,OAAQvB,EAAIC,KAAKsB,OACjBJ,IAAU,OAAL7B,QAAK,IAALA,OAAK,EAALA,EAAO6B,IACZK,MAAY,OAALlC,QAAK,IAALA,OAAK,EAALA,EAAOkC,MACdC,SAAe,OAALnC,QAAK,IAALA,OAAK,EAALA,EAAOmC,WAEnB,IAEHtB,OAAOC,IACNC,QAAQC,IAAIF,EAAI,GAChB,EAOgEsB,CAAWf,GAC3EgB,OAAQ,OACRC,MAAO,CAAEC,OAAQ,aAAcC,SAE9BpB,GACM,EASb,OACEqB,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAAAF,SAAA,EACZlB,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACC,MAAOrD,EAASsD,QAASnD,KACjC4B,EAAAA,EAAAA,KAACwB,EAAc,CAAAN,SAREO,KACnB,MAAMC,EAAYC,EAAO,YAAD1C,OAAawC,IACrC,OAAOzB,EAAAA,EAAAA,KAAC0B,EAAS,GAAG,EAMDE,CAAYxD,MAC7B4B,EAAAA,EAAAA,KAAC6B,EAAiB,CAAAX,SAAuB,QAAvBtD,EAAEU,EAASF,EAAU,UAAE,IAAAR,OAAA,EAArBA,EAAuBkE,WACrB,QADkDjE,EACvES,EAASF,EAAU,UAAE,IAAAP,GAAQ,QAARC,EAArBD,EAAuBiC,cAAM,IAAAhC,OAAR,EAArBA,EAA+BiE,KAAI,CAACjC,EAAQC,KACpCC,EAAAA,EAAAA,KAACJ,EAAU,CAAaE,OAAQA,EAAQC,MAAOA,GAA9BA,OAEZ,EAMdyB,EAAiBQ,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uEAK3BN,EAAoBG,EAAAA,GAAOC,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,mJAOnBH,EAAAA,GAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4C","sources":["routes/Question.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport * as images from \"../assets/images/question\";\nimport Header from \"../components/Header\";\nimport { styled } from \"styled-components\";\nimport MainContainer from \"../components/MainContainer\";\nimport axios from \"axios\";\n\nconst Question = () => {\n  const navigate = useNavigate();\n  const [allPage, setAllPage] = useState(1);\n  const [curPage, setCurPage] = useState(1);\n  const [quesList, setQuesList] = useState([]);\n  const [checkedList, setCheckedList] = useState([]);\n  const { state } = useLocation();\n\n  useEffect(() => {\n    const getData = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}/question`,\n      })\n        .then((res) => {\n          setQuesList(res.data);\n          setAllPage(res.data.length);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    getData();\n  }, []);\n\n  const questionClickEvent = (index) => {\n    setCheckedList([...checkedList, index + 1]);\n    setCurPage(curPage + 1);\n  };\n  const moveResult = async (index) => {\n    await axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}/surbey`,\n      headers: {\n        Authorization: state?.jwt,\n      },\n      data: {\n        questionArr: [...checkedList, index + 1],\n      },\n    })\n      .then((res) => {\n        navigate(`/result`, {\n          state: {\n            mbti: res.data.userMbti,\n            userId: res.data.userId,\n            jwt: state?.jwt,\n            isApp: state?.isApp,\n            platform: state?.platform,\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const AnswerList = ({ answer, index }) => {\n    return (\n      <Button\n        type={\"basic\"}\n        onClick={() => (curPage < allPage ? questionClickEvent(index) : moveResult(index))}\n        height={\"58px\"}\n        style={{ margin: \"1em 0 0 0\" }}\n      >\n        {answer}\n      </Button>\n    );\n  };\n\n  const QuestionImg = (number) => {\n    const ShowImage = images[`question_${number}`];\n    return <ShowImage />;\n  };\n\n  return (\n    <MainContainer>\n      <Header count={allPage} current={curPage} />\n      <ImageContainer>{QuestionImg(curPage)}</ImageContainer>\n      <QuestionContainer>{quesList[curPage - 1]?.question}</QuestionContainer>\n      {quesList[curPage - 1]?.answer?.map((answer, index) => {\n        return <AnswerList key={index} answer={answer} index={index} />;\n      })}\n    </MainContainer>\n  );\n};\n\nexport default Question;\n\nconst ImageContainer = styled.div`\n  /* border: 1px solid #000000; */\n  margin: 1.25em 0 0 0;\n`;\n\nconst QuestionContainer = styled.div`\n  /* border: 1px solid #000000; */\n  font-weight: bold;\n  /* line-height: 1.5625em; */\n  line-height: 100%;\n  margin: 1.25em 0 0 0;\n`;\nconst TestText = styled.span`\n  color: red;\n  font-size: 15px;\n`;"],"names":["Question","_quesList","_quesList2","_quesList2$answer","navigate","useNavigate","allPage","setAllPage","useState","curPage","setCurPage","quesList","setQuesList","checkedList","setCheckedList","state","useLocation","useEffect","async","axios","method","url","concat","process","then","res","data","length","catch","err","console","log","getData","AnswerList","_ref","answer","index","_jsx","Button","type","onClick","questionClickEvent","headers","Authorization","jwt","questionArr","mbti","userMbti","userId","isApp","platform","moveResult","height","style","margin","children","_jsxs","MainContainer","Header","count","current","ImageContainer","number","ShowImage","images","QuestionImg","QuestionContainer","question","map","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","span","_templateObject3"],"sourceRoot":""}