{"version":3,"file":"static/js/527.6151abc5.chunk.js","mappings":"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","sources":["components/Button.jsx","routes/BalanceGameSelect.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport styled from \"styled-components\";\n\nconst FullButton = styled.button`\n  background: ${(props) => (props.type === \"basic\" ? \"#6A8BFF\" : \"#ffffff\")};\n  color: ${(props) => (props.type === \"basic\" ? \"#ffffff\" : \"#000000\")};\n  border: ${(props) => (props.type === \"basic\" ? \"none\" : \"1px solid #000000\")};\n  border-radius: 8px;\n  display: block;\n  width: 100%;\n  height: ${(props) => props.height};\n  box-shadow: 0px 0px 10px rgba(0, 28, 145, 0.2);\n  font-weight: 500;\n  font-size: 1em;\n  line-height: 1.25em;\n  letter-spacing: -0.07em;\n  text-align: center;\n\n  /* &:hover {\n    box-shadow: 0 80px 0 0 rgba(0, 0, 0, 0.25) inset,\n      0 -80px 0 0 rgba(0, 0, 0, 0.25) inset;\n  } */\n\n  &:active {\n    background: ${(props) => (props.type === \"basic\" ? \"#021248\" : \"#ffffff\")};\n\n  }\n`;\n// height : em, forn-size : 반응형\nconst Button = ({ children, type, height, ...rest }) => {\n\n  return (\n    <FullButton type={type} height={height}{...rest}>\n      {children}\n    </FullButton>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, useLocation, useSearchParams } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport { styled } from \"styled-components\";\n// import MainContainer from \"../components/MainContainer\";\nimport axios from \"axios\";\nimport testImage1 from \"../assets/image/test_img01.png\";\nimport testImage2 from \"../assets/image/test_img02.png\";\nimport versusImage from \"../assets/image/versus_image.png\";\nimport { ClipLoader } from \"react-spinners\";\n\n// const balanceGame = {\n//   title: \"당신이 원하는 음식은?\",\n//   cate: \"음식점\",\n//   balanceGameId: 1,\n//   balanceInfo: [\n//     {\n//       balanceImage: \"https://tong.visitkorea.or.kr/cms/resource/28/1970128_image2_1.jpg\",\n//       balanceName: \"서양식\",\n//       balanceNameId: 1,\n//     },\n//     {\n//       balanceImage: \"https://tong.visitkorea.or.kr/cms/resource/12/2987512_image2_1.png\",\n//       balanceName: \"일식\",\n//       balanceNameId: 2,\n//     },\n//   ],\n// };\n\nconst BalanceGameSelect = () => {\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [userId, setUserId] = useState(\"\");\n  const [jwt, setJwt] = useState(\"\");\n  // const [rnSend, setRnSend] = useState(false);\n  const [isApp, setIsApp] = useState(null);\n  const [platform, setPlatform] = useState(null);\n  const [balanceGame, setBalanceGame] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  const pathId = searchParams.get(\"id\");\n\n  useEffect(() => {\n    window.ReactNativeWebView?.postMessage(JSON.stringify(true));\n    //android\n    document.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData.loginData.jwt);\n        }\n        // setRnSend(true);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    //ios\n    window.addEventListener(\"message\", (e) => {\n      try {\n        const parseData = JSON.parse(e.data);\n        if (parseData.loginData) {\n          setUserId(parseData.loginData.id);\n          setJwt(parseData.loginData.jwt);\n        }\n        // setRnSend(true);\n        setIsApp(parseData.isApp);\n        setPlatform(parseData.platform);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    getData();\n  }, []);\n\n  const getData = async () => {\n    setLoading(true);\n    // console.log(\"hi\");\n    await axios({\n      method: \"get\",\n      headers: {\n        \"Access-Control-Allow-Credentials\": true,\n        \"ngrok-skip-browser-warning\": true,\n      },\n      url: `${process.env.REACT_APP_API_URL}/balancegame/start?balanceGameId=${pathId}`,\n    })\n      .then((res) => {\n        setBalanceGame(res.data.balanceGame[0]);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const selectEvent = async (gameId, nameId, check) => {\n    await axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}/balancegame/saveResult1`,\n      headers: {\n        Authorization: jwt,\n      },\n      data: {\n        balanceGameId: gameId,\n        balanceNameId: nameId,\n      },\n    })\n      .then((res) => {\n        navigate(\"/balancegameselectresult\", {\n          state: {\n            check: check,\n            jwt: jwt,\n            userId: userId,\n            isApp: isApp,\n            platform: platform,\n            pathId: pathId,\n            guest_name: res.data.guest_name,\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Container>\n      {loading ? (\n        <LoadingBox>\n          <ClipLoader color=\"#25B1FA\" />\n        </LoadingBox>\n      ) : (\n        <>\n          <TextContainer>\n            <TextTopContainer>\n              <WhiteText>{balanceGame?.title}</WhiteText>\n            </TextTopContainer>\n          </TextContainer>\n          <SelectContainer>\n            <SelectTopContainer\n              onClick={() =>\n                selectEvent(balanceGame.balanceGameId, balanceGame.balanceInfo[0].balanceNameId, [\n                  true,\n                  false,\n                ])\n              }\n            >\n              <SelectImage src={balanceGame?.balanceInfo[0].balanceImage} />\n              <SelectBtn>{balanceGame?.balanceInfo[0].balanceName}</SelectBtn>\n            </SelectTopContainer>\n            <VersusImgage src={versusImage} />\n            <SelectBotContainer\n              onClick={() =>\n                selectEvent(balanceGame.balanceGameId, balanceGame.balanceInfo[1].balanceNameId, [\n                  false,\n                  true,\n                ])\n              }\n            >\n              <SelectImage src={balanceGame?.balanceInfo[1].balanceImage} />\n              <SelectBtn>{balanceGame?.balanceInfo[1].balanceName}</SelectBtn>\n            </SelectBotContainer>\n          </SelectContainer>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default BalanceGameSelect;\n\nconst Container = styled.div`\n  vertical-align: middle;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n`;\nconst TextContainer = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 12.5vh;\n`;\nconst TextTopContainer = styled.div`\n  display: flex;\n`;\nconst TextBotContainer = styled.div`\n  display: flex;\n`;\nconst WhiteText = styled.p`\n  color: #ffffff;\n  font-size: 20px;\n  display: flex;\n  line-height: 30px;\n  font-weight: 500;\n`;\nconst SelectContainer = styled.div`\n  display: flex;\n  height: 87.5vh;\n  width: 100%;\n  flex-direction: column;\n  position: relative;\n`;\nconst SelectTopContainer = styled.div`\n  height: 43.75vh;\n  display: flex;\n  width: 100%;\n  background-color: yellow;\n  position: relative;\n`;\nconst SelectBotContainer = styled.div`\n  height: 43.75vh;\n  display: flex;\n  width: 100%;\n  position: relative;\n  background-color: green;\n`;\nconst VersusText = styled.span`\n  display: flex;\n  font-size: 72px;\n  position: absolute;\n  font-weight: 500;\n  /* line-height: 101.36px; */\n  color: #ffffff;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%); //💛 정중앙 배치\n`;\nconst VersusImgage = styled.img`\n  display: flex;\n  position: absolute;\n  width: 190px;\n  height: 190px;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%); //💛 정중앙 배치\n  pointer-events: none;\n`;\nconst SelectBtn = styled.button`\n  display: flex;\n  background-color: #25b1fa;\n  border-radius: 8px;\n  /* width: 124px; */\n  height: 30px;\n  color: #f5f5f5;\n  /* font-weight: 500; */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  padding: 8px 16px 8px 16px;\n  z-index: 100;\n  transform: translate(-50%, -50%);\n  font-size: 16px;\n  /* text-align: center; */\n  align-items: center;\n  justify-content: center;\n  line-height: 24px;\n`;\nconst SelectImage = styled.img`\n  width: 100%;\n  height: 100%;\n`;\nconst LoadingBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n`;\n"],"names":["FullButton","styled","button","_templateObject","_taggedTemplateLiteral","props","type","height","_ref","children","rest","_jsx","BalanceGameSelect","navigate","useNavigate","searchParams","setSearchParams","useSearchParams","userId","setUserId","useState","jwt","setJwt","isApp","setIsApp","platform","setPlatform","balanceGame","setBalanceGame","loading","setLoading","pathId","get","useEffect","_window$ReactNativeWe","window","ReactNativeWebView","postMessage","JSON","stringify","document","addEventListener","e","parseData","parse","data","loginData","id","err","console","log","getData","async","axios","method","headers","url","concat","process","then","res","catch","selectEvent","gameId","nameId","check","Authorization","balanceGameId","balanceNameId","state","guest_name","Container","LoadingBox","ClipLoader","color","_jsxs","_Fragment","TextContainer","TextTopContainer","WhiteText","title","SelectContainer","SelectTopContainer","onClick","balanceInfo","SelectImage","src","balanceImage","SelectBtn","balanceName","VersusImgage","versusImage","SelectBotContainer","div","_templateObject2","_templateObject3","_templateObject4","p","_templateObject5","_templateObject6","_templateObject7","_templateObject8","span","_templateObject9","img","_templateObject10","_templateObject11","_templateObject12","_templateObject13"],"sourceRoot":""}